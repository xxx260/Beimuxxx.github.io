<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/10/24/hello-world/</url>
    <content><![CDATA[<p><strong>Welcome to XXX’s Blog</strong></p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start">#</a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post">#</a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hx new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<!-- More info: [Writing](https://hexo.io/docs/writing.html) -->
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server">#</a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hx server</span><br></pre></td></tr></table></figure>
<!-- More info: [Server](https://hexo.io/docs/server.html) -->
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files">#</a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hx generate</span><br></pre></td></tr></table></figure>
<!-- More info: [Generating](https://hexo.io/docs/generating.html) -->
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites">#</a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hx deploy</span><br></pre></td></tr></table></figure>
<!-- More info: [Deployment](https://hexo.io/docs/one-command-deployment.html) -->
]]></content>
  </entry>
  <entry>
    <title>FirstPost</title>
    <url>/2022/10/25/blog/FirstPost/</url>
    <content><![CDATA[<h1 id="开启新的玩耍吧"><a class="markdownIt-Anchor" href="#开启新的玩耍吧">#</a> <span class="rainbow">开启新的玩耍吧！！！！</span></h1>
]]></content>
      <categories>
        <category>博客</category>
        <category>start</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Git</title>
    <url>/2022/10/25/blog/Git/Git/</url>
    <content><![CDATA[<h2 id="版本控制"><a class="markdownIt-Anchor" href="#版本控制">#</a> 👉版本控制</h2>
<details class="warning"><summary>什么是版本控制</summary><div>
<p>版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。</p>
<ul>
<li>实现跨区域多人协同开发</li>
<li>追踪和记载一个或者多个文件的历史记录</li>
<li>组织和保护你的源代码和文档</li>
<li>统计工作量</li>
<li>并行开发、提高开发效率</li>
<li>跟踪记录整个软件的开发过程</li>
<li>减轻开发人员的负担，节省时间，同时降低人为错误</li>
</ul>
<p>简单说就是用于管理多人协同开发项目的技术。</p>
<p>没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。</p>
<p>无论是工作还是学习，或者是自己做笔记，都经历过这样一个阶段！我们就迫切需要一个版本控制工具！</p>
<p>多人开发就必须要使用版本控制！</p>
</div></details>
<details class="warning"><summary>常见的版本控制工具</summary><div>
<p>我们学习的东西，一定是当下最流行的！</p>
<p>主流的版本控制器有如下这些：</p>
<ul>
<li><strong>Git</strong></li>
<li><strong>SVN</strong>（Subversion）</li>
<li><strong>CVS</strong>（Concurrent Versions System）</li>
<li><strong>VSS</strong>（Micorosoft Visual SourceSafe）</li>
<li><strong>TFS</strong>（Team Foundation Server）</li>
<li>Visual Studio Online</li>
</ul>
<p>版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是 Git 与 SVN</p>
</div></details>
<details class="warning"><summary>版本控制分类</summary><div>
<p><strong>1、本地版本控制</strong></p>
<p>记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如 RCS。</p>
<p><strong>2、集中版本控制  SVN</strong></p>
<p>所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改</p>
<p>所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS</p>
<p><strong>3、分布式版本控制 	Git</strong></p>
<p>每个人都拥有全部的代码！安全隐患！</p>
<p>所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时 push 到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。</p>
<p>不会因为服务器损坏或者网络问题，造成不能工作的情况！</p>
</div></details>
<details class="warning"><summary>Git与SVN的主要区别</summary><div>
<p>SVN 是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。</p>
<p>Git 是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件 A，其他人也在电脑上改了文件 A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git 可以直接看到更新了哪些代码和文件！</p>
<p><strong>Git 是目前世界上最先进的分布式版本控制系统。</strong></p>
</div></details>
<h2 id="聊聊git的历史"><a class="markdownIt-Anchor" href="#聊聊git的历史">#</a> 👉聊聊 Git 的历史</h2>
<p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。</p>
<p>Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上 (1991－2002 年间)。到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p>
<p>Linux 社区中存在很多的大佬！破解研究 BitKeeper ！</p>
<p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。这就迫使 Linux 开源社区 (特别是 Linux 的缔造者 Linus Torvalds) 基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。（2 周左右！） 也就是后来的 Git！</p>
<p><strong>Git 是目前世界上最先进的分布式版本控制系统。</strong></p>
<p>Git 是免费、开源的，最初 Git 是为辅助 Linux 内核开发的，来替代 BitKeeper！</p>
<p>Linux 和 Git 之父李纳斯・托沃兹（Linus Benedic Torvalds）1969、芬兰</p>
<h2 id="git环境配置"><a class="markdownIt-Anchor" href="#git环境配置">#</a> 👉Git 环境配置</h2>
<details class="warning"><summary>软件下载</summary><div>
<p>打开 [git 官网] <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8lRUYlQkMlOEMlRTQlQjglOEIlRTglQkQlQkRnaXQlRTUlQUYlQjklRTUlQkElOTQlRTYlOTMlOEQlRTQlQkQlOUMlRTclQjMlQkIlRTclQkIlOUYlRTclOUElODQlRTclODklODglRTYlOUMlQUMlRTMlODAlODI=">https://git-scm.com/，下载 git 对应操作系统的版本。</span></p>
<p>所有东西下载慢的话就可以去找镜像！</p>
<p>官网下载太慢，我们可以使用淘宝镜像下载：<span class="exturl" data-url="aHR0cDovL25wbS50YW9iYW8ub3JnL21pcnJvcnMvZ2l0LWZvci13aW5kb3dzLw==">http://npm.taobao.org/mirrors/git-for-windows/</span></p>
<p>下载对应的版本即可安装！</p>
<p>安装：无脑下一步即可！安装完毕就可以使用了！</p>
<details class="warning"><summary>启动Git</summary><div>
<p>安装成功后在开始菜单中会有 Git 项，菜单下有 3 个程序：任意文件夹下右键也可以看到对应的程序！</p>
<p>**Git Bash：**Unix 与 Linux 风格的命令行，使用最多，推荐最多</p>
<p>**Git CMD：**Windows 风格的命令行</p>
<p><strong>Git GUI</strong>：图形界面的 Git，不建议初学者使用，尽量先熟悉常用命令</p>
</div></details>
</div></details>
<details class="warning"><summary>常用的Linux命令</summary><div>
<p>平时一定要多使用这些基础的命令！</p>
<p>1）、cd : 改变目录。</p>
<p>2）、cd . . 回退到上一个目录，直接 cd 进入默认目录</p>
<p>3）、pwd : 显示当前所在的目录路径。</p>
<p>4）、ls (ll):  都是列出当前目录中的所有文件，只不过 ll (两个 ll) 列出的内容更为详细。</p>
<p>5）、touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个 index.js 文件。</p>
<p>6）、rm:  删除一个文件，rm index.js 就会把 index.js 文件删除。</p>
<p>7）、mkdir:  新建一个目录，就是新建一个文件夹。</p>
<p>8）、rm -r :  删除一个文件夹，rm -r src 删除 src 目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -rf / 切勿在Linux中尝试！删除电脑中全部文件！</span><br></pre></td></tr></table></figure>
<p>9）、mv 移动文件，mv index.html src index.html 是我们要移动的文件，src 是目标文件夹，当然，这样写，必须保证文件和目标文件夹在同一目录下。</p>
<p>10）、reset 重新初始化终端 / 清屏。</p>
<p>11）、clear 清屏。</p>
<p>12）、history 查看命令历史。</p>
<p>13）、help 帮助。</p>
<p>14）、exit 退出。</p>
<p>15）、# 表示注释</p>
</div></details>
<details class="warning"><summary>Git配置</summary><div>
<p>所有的配置文件，其实都保存在本地！</p>
<p>查看配置 git config -l</p>
<p>查看不同级别的配置文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看系统configgit config --system --list　　</span><br><span class="line">#查看当前用户（global）配置git config --global  --list</span><br></pre></td></tr></table></figure>
<p><strong>Git 相关的配置文件：</strong></p>
<p>1）、Git\etc\gitconfig  ：Git 安装目录下的 gitconfig   --system 系统级</p>
<p>2）、C:\Users\Administrator\ .gitconfig   只适用于当前登录用户的配置  --global 全局</p>
<p>这里可以直接编辑配置文件，通过命令设置后会响应到这里。</p>
</div></details>
<details class="warning"><summary>设置用户名与邮箱（用户标识，必要）</summary><div>
<p>当你安装 Git 后首先要做的事情是设置你的用户名称和 e-mail 地址。这是非常重要的，因为每次 Git 提交都会使用该信息。它被永远的嵌入到了你的提交中：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;kuangshen&quot; #名称</span><br><span class="line">git config --global user.email 24736743@qq.com   #邮箱</span><br></pre></td></tr></table></figure>
<p>只需要做一次这个设置，如果你传递了–global 选项，因为 Git 将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或 e-mail 地址，你可以在该项目中运行该命令而不要–global 选项。总之–global 为全局配置，不加为某个项目的特定配置。</p>
</div></details>
<h2 id="git基本理论重要"><a class="markdownIt-Anchor" href="#git基本理论重要">#</a> 👉Git 基本理论（重要）</h2>
<details class="warning"><summary>三个区域</summary><div>
<p>Git 本地有三个工作区域：工作目录（Working Directory）、暂存区 (Stage/Index)、资源库 (Repository 或 Git Directory)。如果在加上远程的 git 仓库 (Remote Directory) 就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：</p>
<ul>
<li>Workspace：工作区，就是你平时存放项目代码的地方</li>
<li>Index / Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li>
<li>Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中 HEAD 指向最新放入仓库的版本</li>
<li>Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li>
</ul>
<p>本地的三个区域确切的说应该是 git 仓库中 HEAD 指向的版本：</p>
<ul>
<li>Directory：使用 Git 管理的一个目录，也就是一个仓库，包含我们的工作空间和 Git 的管理空间。</li>
<li>WorkSpace：需要通过 Git 进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li>
<li>.git：存放 Git 管理信息的目录，初始化仓库的时候自动创建。</li>
<li>Index/Stage：暂存区，或者叫待提交更新区，在提交进入 repo 之前，我们可以把所有的更新放在暂存区。</li>
<li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD 会只是当前的开发分支（branch）。</li>
<li>Stash：隐藏，是一个工作状态保存栈，用于保存 / 恢复 WorkSpace 中的临时状态。</li>
</ul>
</div></details>
<details class="warning"><summary>工作流程</summary><div>
<p>git 的工作流程一般是这样的：</p>
<p>１、在工作目录中添加、修改文件；</p>
<p>２、将需要进行版本管理的文件放入暂存区域；</p>
<p>３、将暂存区域的文件提交到 git 仓库。</p>
<p>因此，git 管理的文件有三种状态：已修改（modified）, 已暂存（staged）, 已提交 (committed)</p>
<p>Git 项目搭建</p>
</div></details>
<details class="warning"><summary>创建工作目录与常用指令</summary><div>
<p>工作目录（WorkSpace) 一般就是你希望 Git 帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p>
<p>日常使用只要记住下图 6 个命令：</p>
</div></details>
<details class="warning"><summary>本地仓库搭建</summary><div>
<p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。</p>
<p>1、创建全新的仓库，需要用 GIT 管理的项目的根目录执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 在当前目录新建一个Git代码库$ git init</span><br></pre></td></tr></table></figure>
<p>2、执行后可以看到，仅仅在项目目录多出了一个.git 目录，关于版本等的所有信息都在这个目录里面。</p>
</div></details>
<details class="warning"><summary>克隆远程仓库</summary><div>
<p>1、另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 克隆一个项目和它的整个代码历史(版本信息)$ git clone [url]  # https://gitee.com/kuangstudy/openclass.git</span><br><span class="line">示例：$ git clone https://gitee.com/kuangstudy/openclass.git</span><br></pre></td></tr></table></figure>
<p>2、去 gitee 或者 github 上克隆一个测试！</p>
</div></details>
<h2 id="git文件操作"><a class="markdownIt-Anchor" href="#git文件操作">#</a> 👉Git 文件操作</h2>
<details class="warning"><summary>文件的四种状态</summary><div>
<p>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p>
<ul>
<li>Untracked: 未跟踪，此文件在文件夹中，但并没有加入到 git 库，不参与版本控制。通过 git add 状态变为 Staged.</li>
<li>Unmodify: 文件已经入库，未修改，即版本库中的文件快照内容与文件夹中完全一致。这种类型的文件有两种去处，如果它被修改，而变为 Modified. 如果使用 git rm 移出版本库，则成为 Untracked 文件</li>
<li>Modified: 文件已修改，仅仅是修改，并没有进行其他的操作。这个文件也有两个去处，通过 git add 可进入暂存 staged 状态，使用 git checkout 则丢弃修改过，返回到 unmodify 状态，这个 git checkout 即从库中取出文件，覆盖当前修改！</li>
<li>Staged: 暂存状态。执行 git commit 则将修改同步到库中，这时库中的文件和本地文件又变为一致，文件为 Unmodify 状态。执行 git reset HEAD filename 取消暂存，文件状态为 Modified</li>
</ul>
</div></details>
<details class="warning"><summary>查看文件状态</summary><div>
<p>上面说文件有 4 种状态，通过如下命令可以查看到文件的状态：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看指定文件状态</span><br><span class="line">git status [filename]</span><br><span class="line">#查看所有文件状态</span><br><span class="line">git status</span><br><span class="line"></span><br><span class="line"># git add .                  添加所有文件到暂存区</span><br><span class="line"># git commit -m &quot;消息内容&quot;    提交暂存区中的内容到本地仓库 -m 提交信息 </span><br><span class="line">  示例git commit -m &quot;new file hello.txt&quot;</span><br></pre></td></tr></table></figure>
</div></details>
<details class="warning"><summary>忽略文件</summary><div>
<p>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p>
<p>在主目录下建立 &quot;.gitignore&quot; 文件，此文件有如下规则：</p>
<ol>
<li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li>
<li>可以使用 Linux 通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li>
<li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li>
<li>如果名称的最前面是一个路径分隔符（/），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li>
<li>如果名称的最后面是一个路径分隔符（/），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#为注释*.txt        </span><br><span class="line">#忽略所有 .txt结尾的文件,这样的话上传就不会被选中！!lib.txt     </span><br><span class="line">#但lib.txt除外/temp        </span><br><span class="line">#仅忽略项目根目录下的TODO文件,不包括其它目录tempbuild/       </span><br><span class="line">#忽略build/目录下的所有文件doc/*.txt    </span><br><span class="line">#会忽略 doc/notes.txt 但不包括 doc/server/arch.txt</span><br></pre></td></tr></table></figure>
</div></details>
<h2 id="使用码云"><a class="markdownIt-Anchor" href="#使用码云">#</a> 👉使用码云</h2>
<details class="warning"><summary>github 是有墙的，比较慢，在国内的话，我们一般使用 gitee ，公司中有时候会搭建自己的gitlab服务器</summary><div>
<p>这个其实可以作为大家未来找工作的一个重要信息！</p>
<p>1、注册登录码云，完善个人信息</p>
<p>2、设置本机绑定 SSH 公钥，实现免密码登录！（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库！)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 进入 C:\Users\Administrator\.ssh 目录</span><br><span class="line"># 生成公钥</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>
<p>3、将公钥信息 public key 添加到码云账户中即可！</p>
<p>4、<strong>使用码云创建一个自己的仓库！</strong></p>
<p>许可证：开源是否可以随意转载，开源但是不能商业使用，不能转载，…  限制！</p>
<img data-src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7Ksu8UlITwMlbX3kMGtZ9p0S96XfGogNWVqRAexeybT7DXdyQhfcYJ1oEAgaH1RibRU0WZE0eczdxw/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom: 50%;" />
</div></details>
<details class="warning"><summary>**uniapp项目上传码云**</summary><div>
<p>克隆到本地！</p>
</div></details>
<h2 id="idea中集成git"><a class="markdownIt-Anchor" href="#idea中集成git">#</a> 👉IDEA 中集成 Git</h2>
<p>1、新建项目，绑定 git。</p>
<p>注意观察 idea 中的变化</p>
<p>2、修改文件，使用 IDEA 操作 git。</p>
<ul>
<li>添加到暂存区</li>
<li>commit 提交</li>
<li>push 到远程仓库</li>
</ul>
<p>3、提交测试</p>
<p>这些都是单个人的操作！</p>
<p>学习的方式最重要！学会学习！我上课的更多时候都是在教大家去学习一种理念和思想（学习方式）</p>
<p>有道无术、术尚可求。有术无道、止于术！</p>
<p>真正的教学，授人以渔！</p>
<h2 id="说明git分支"><a class="markdownIt-Anchor" href="#说明git分支">#</a> 👉说明：GIT 分支</h2>
<p>分支在 GIT 中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！</p>
<p>git 分支中常用指令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 列出所有本地分支git branch</span><br><span class="line"># 列出所有远程分支git branch -r</span><br><span class="line"># 新建一个分支，但依然停留在当前分支git branch [branch-name]</span><br><span class="line"># 新建一个分支，并切换到该分支git checkout -b [branch]</span><br><span class="line"># 合并指定分支到当前分支$ git merge [branch]</span><br><span class="line"># 删除分支$ git branch -d [branch-name]</span><br><span class="line"># 删除远程分支$ git push origin --delete [branch-name]$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>
<p>IDEA 中操作</p>
<p>如果同一个文件在合并分支时都被修改了则会引起冲突：解决的办法是我们可以修改冲突文件后重新提交！选择要保留他的代码还是你的代码！</p>
<p>master 主分支应该非常稳定，用来发布新版本，一般情况下不允许在上面工作，工作一般情况下在新建的 dev 分支上工作，工作完后，比如上要发布，或者说 dev 分支代码稳定后可以合并到主分支 master 上来。</p>
]]></content>
      <categories>
        <category>Git</category>
        <category>Git介绍</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitee_Github与Vscode_IDEA</title>
    <url>/2022/10/25/blog/Git/Gitee_Github%E4%B8%8EVscode_IDEA/</url>
    <content><![CDATA[<h2 id="giteegithub与vscodeidea"><a class="markdownIt-Anchor" href="#giteegithub与vscodeidea">#</a> Gitee/Github 与 Vscode/IDEA</h2>
<h2 id="vscode"><a class="markdownIt-Anchor" href="#vscode">#</a> Vscode</h2>
<h3 id="gitee"><a class="markdownIt-Anchor" href="#gitee">#</a> Gitee</h3>
<h4 id="创建git仓库"><a class="markdownIt-Anchor" href="#创建git仓库">#</a> 创建 Git 仓库</h4>
<h4 id="打开vscode终端"><a class="markdownIt-Anchor" href="#打开vscode终端">#</a> 打开 VScode 终端</h4>
<h4 id="git全局设置依次输入命令"><a class="markdownIt-Anchor" href="#git全局设置依次输入命令">#</a> GIt 全局设置，依次输入命令：</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;北沐xxx&quot;</span><br><span class="line">git config --global user.email &quot;2603361579@qq.com&quot;</span><br><span class="line">git init  //初始化,会在项目根目录生成一个隐藏的.git文件夹</span><br><span class="line">git add .  //提交到本地仓库</span><br><span class="line">git commit -m &quot;项目描述&quot;</span><br><span class="line">git remote add origin ...  //...为Git地址</span><br><span class="line">git push -u origin &quot;master&quot;</span><br></pre></td></tr></table></figure>
<h4 id="拉取他人提交"><a class="markdownIt-Anchor" href="#拉取他人提交">#</a> 拉取他人提交</h4>
<p>在终端输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin master </span><br></pre></td></tr></table></figure>
<h4 id="上传同步gitee"><a class="markdownIt-Anchor" href="#上传同步gitee">#</a> 上传同步 Gitee</h4>
<h5 id="情况一他人为修改上传至gitee"><a class="markdownIt-Anchor" href="#情况一他人为修改上传至gitee">#</a> 情况一：他人为修改上传至 Gitee</h5>
<ul>
<li>
<p>修改代码后，VScode 会有提示（提示在左边侧边栏一个分支一样的图案）</p>
</li>
<li>
<p>点击修改文件的 “<strong>+</strong>” 号提交至暂存区</p>
</li>
<li>
<p>输入框输入提交信息</p>
</li>
<li>
<p>点击提交</p>
</li>
<li>
<p>点击同步更改</p>
</li>
</ul>
<h5 id="情况二团队其他成员修改了某文件并已提交入库"><a class="markdownIt-Anchor" href="#情况二团队其他成员修改了某文件并已提交入库">#</a> 情况二：团队其他成员修改了某文件并已提交入库</h5>
<p>保留自己修改的文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash #封存修改</span><br><span class="line">git pull origin master </span><br><span class="line">git stash pop #把修改还原</span><br></pre></td></tr></table></figure>
<ul>
<li>git stash：备份当前工作区内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前工作区内容保存到 Git 栈中</li>
<li>git pull：拉取服务器上当前分支代码</li>
<li>git stash pop：从 Git 栈中读取最近一次保存的内容，恢复工作区相关内容。同时，用户可能进行多次 stash 操作，需要保证后 stash 的最先被取到，所以用栈（先进后出）来管理；pop 取栈顶的内容并恢复</li>
<li>git stash list：显示 Git 栈内的所有备份，可以利用这个列表来决定从那个地方恢复</li>
<li>git stash clear：清空 Git 栈</li>
</ul>
<h2 id="idea"><a class="markdownIt-Anchor" href="#idea">#</a> IDEA</h2>
<h3 id="github"><a class="markdownIt-Anchor" href="#github">#</a> GitHub</h3>
<h4 id="拉取项目"><a class="markdownIt-Anchor" href="#拉取项目">#</a> 拉取项目</h4>
<p><img data-src="https://img-blog.csdnimg.cn/29f893f28fe04d1e9e86a0aca5e0106b.png" alt="img"></p>
<p><img data-src="https://img-blog.csdnimg.cn/60b3b40c9c134ab085c3fe5af4330c89.png" alt="img"></p>
<p><img data-src="https://img-blog.csdnimg.cn/1a30332620d441c9969c70f227a88243.png" alt="img"></p>
]]></content>
      <categories>
        <category>Git</category>
        <category>Git实际操作</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML</title>
    <url>/2022/11/22/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/HTML/</url>
    <content><![CDATA[<h1 id="html"><a class="markdownIt-Anchor" href="#html">#</a> HTML</h1>
<h4 id="边框"><a class="markdownIt-Anchor" href="#边框">#</a> 边框</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;fieldset&gt;</span><br><span class="line">	&lt;legend&gt;学生档案&lt;/legend&gt;</span><br><span class="line">&lt;/fieldset&gt;</span><br></pre></td></tr></table></figure>
<h4 id="音频播放"><a class="markdownIt-Anchor" href="#音频播放">#</a> 音频播放</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;audio&gt; &lt;/audio&gt;</span><br><span class="line">&lt;video&gt; &lt;/video&gt;</span><br><span class="line">属性：</span><br><span class="line">src:播放路径</span><br><span class="line">controls：音频播放器的控制面板</span><br><span class="line">autoplay：自动播放</span><br><span class="line">loop：循环播放</span><br><span class="line">width/height：只设置一个即可，让其等比缩放</span><br><span class="line">poster：当视频还没有完全下载，或者用户还没有点击播放前的默认显示的封面。默认显示当前视频文件的第一幅画面。</span><br></pre></td></tr></table></figure>
<h4 id="表单"><a class="markdownIt-Anchor" href="#表单">#</a> 表单</h4>
<table>
<thead>
<tr>
<th>类型</th>
<th style="text-align:left">使用示例</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>email</td>
<td style="text-align:left"><code>&lt;input type=&quot;email&quot;&gt;</code></td>
<td>输入邮箱格式</td>
</tr>
<tr>
<td>tel</td>
<td style="text-align:left"><code>&lt;input type=&quot;tel&quot;&gt;</code></td>
<td>输入手机号码格式</td>
</tr>
<tr>
<td>url</td>
<td style="text-align:left"><code>&lt;input type=&quot;url&quot;&gt;</code></td>
<td>输入 url 格式</td>
</tr>
<tr>
<td>number</td>
<td style="text-align:left"><code>&lt;input type=&quot;number&quot;&gt;</code></td>
<td>输入数字格式</td>
</tr>
<tr>
<td>search</td>
<td style="text-align:left"><code>&lt;input type=&quot;search&quot;&gt;</code></td>
<td>搜索框（体现语义化）</td>
</tr>
<tr>
<td>range</td>
<td style="text-align:left"><code>&lt;input type=&quot;range&quot;&gt;</code></td>
<td>自由拖动滑块</td>
</tr>
<tr>
<td>color</td>
<td style="text-align:left"><code>&lt;input type=&quot;color&quot;&gt;</code></td>
<td>拾色器</td>
</tr>
<tr>
<td>time</td>
<td style="text-align:left"><code>&lt;input type=&quot;time&quot;&gt;</code></td>
<td></td>
</tr>
<tr>
<td>date</td>
<td style="text-align:left"><code>&lt;input type=&quot;date&quot;&gt;</code></td>
<td></td>
</tr>
<tr>
<td>datetime</td>
<td style="text-align:left"><code>&lt;input type=&quot;datetime&quot;&gt;</code></td>
<td></td>
</tr>
<tr>
<td>month</td>
<td style="text-align:left"><code>&lt;input type=&quot;month&quot;&gt;</code></td>
<td></td>
</tr>
<tr>
<td>week</td>
<td style="text-align:left"><code>&lt;input type=&quot;week&quot;&gt;</code></td>
<td></td>
</tr>
</tbody>
<tbody>
<tr>
<td>元素</td>
<td style="text-align:left">含义</td>
</tr>
<tr>
<td>------------</td>
<td style="text-align:left">--------------</td>
</tr>
<tr>
<td><code>&lt;datalist&gt;</code></td>
<td style="text-align:left">数据列表</td>
</tr>
<tr>
<td><code>&lt;keygen&gt;</code></td>
<td style="text-align:left">生成加密字符串</td>
</tr>
<tr>
<td><code>&lt;output&gt;</code></td>
<td style="text-align:left">输出结果</td>
</tr>
<tr>
<td><code>&lt;meter&gt;</code></td>
<td style="text-align:left">度量器</td>
</tr>
</tbody>
<tbody>
<tr>
<td>属性</td>
<td style="text-align:left">用法</td>
<td>含义</td>
</tr>
<tr>
<td>------------</td>
<td style="text-align:left">----------------------------------------------</td>
<td>------------</td>
</tr>
<tr>
<td>placeholder</td>
<td style="text-align:left"><input type="text" placeholder="请输入用户名"></td>
<td>占位符</td>
</tr>
<tr>
<td>autofocus</td>
<td style="text-align:left"><input type="text" autofocus></td>
<td>自动获得焦点</td>
</tr>
<tr>
<td>multiple</td>
<td style="text-align:left"><input type="file" multiple></td>
<td>多文件上传</td>
</tr>
<tr>
<td>autocomplete</td>
<td style="text-align:left"><input type="text" autocomplete="off"></td>
<td>自动完成</td>
</tr>
<tr>
<td>form</td>
<td style="text-align:left"><input type="text" form="某表单ID"></td>
<td></td>
</tr>
<tr>
<td>novalidate</td>
<td style="text-align:left"><form novalidate></form></td>
<td>关闭验证</td>
</tr>
<tr>
<td>required</td>
<td style="text-align:left"><input type="text" required></td>
<td>必填项</td>
</tr>
<tr>
<td>pattern</td>
<td style="text-align:left"><input type="text" pattern="\d"></td>
<td>自定义验证</td>
</tr>
</tbody>
</table>
<h4 id="获取dom操作"><a class="markdownIt-Anchor" href="#获取dom操作">#</a> 获取 dom 操作</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">window.onload=function()&#123;</span><br><span class="line">	document.querySelector()</span><br><span class="line">	document.querySelectorAll()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="类名操作"><a class="markdownIt-Anchor" href="#类名操作">#</a> 类名操作</h4>
<p>1、Node.classList.add (‘class’) 添加 class</p>
<p>2、Node.classList.remove (‘class’) 移除 class</p>
<p>3、Node.classList.toggle (‘class’) 切换 class，有则移除，无则添加</p>
<p>4、Node.classList.contains (‘class’) 检测是否存在 class</p>
<p>Node 指一个有效的 DOM 节点，是一个通称。</p>
<h4 id="拖拽"><a class="markdownIt-Anchor" href="#拖拽">#</a> 拖拽</h4>
<p>a) 在拖动目标上触发事件 (源元素):</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJhZ3N0YXJ0Lmh0bWw=">ondragstart</span> - 用户开始拖动元素时触发</p>
<p>Ø ondrag - 元素正在拖动时触发</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJhZ2VuZC5odG1s">ondragend</span> - 用户完成元素拖动后触发</p>
<p>b) 释放目标时触发的事件 —  当拖拽元素在目标容器上进行操作的时候:</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJhZ2VudGVyLmh0bWw=">ondragenter</span> - 当被鼠标拖动的对象进入其容器范围内时触发此事件</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJhZ292ZXIuaHRtbA==">ondragover</span> - 当某被拖动的对象在另一对象容器范围内拖动时触发此事件</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJhZ2xlYXZlLmh0bWw=">ondragleave</span> - 当被鼠标拖动的对象离开其容器范围内时触发此事件</p>
<p>Ø <span class="exturl" data-url="aHR0cDovL3d3dy5ydW5vb2IuY29tL2pzcmVmL2V2ZW50LW9uZHJvcC5odG1s">ondrop</span> - 在一个拖动过程中，释放鼠标键时触发此事件</p>
<ul>
<li>网页结构代码</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--标记是否可以拖动，true表示可以拖动--&gt;</span><br><span class="line">&lt;div class=&quot;div1&quot;&gt;</span><br><span class="line">    &lt;p draggable=&quot;true&quot; id=&quot;pe&quot;&gt;试着把我拖过去&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>Js 代码 (几个事件的说明)：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    /*这几次拖拽的事件源都是当前被拖拽的元素*/</span><br><span class="line">    /*开始拖拽*/</span><br><span class="line">    document.addEventListener(&quot;dragstart&quot;,function(e)&#123;</span><br><span class="line">        //设置当前目标元素的透明度，产生拖拽效果</span><br><span class="line">        e.target.style.opacity=0.4;</span><br><span class="line">        //将当前的被拖拽元素的id号存储到事件源对象中</span><br><span class="line">        e.dataTransfer.setData(&quot;Text&quot;, e.target.id);</span><br><span class="line">    &#125;);</span><br><span class="line">  /*拖拽进行中*/</span><br><span class="line">    document.addEventListener(&quot;drag&quot;,function(e)&#123;</span><br><span class="line">        e.target.parentNode.style.borderColor=&quot;green&quot;;</span><br><span class="line">    &#125;);</span><br><span class="line">    /*拖拽结束*/</span><br><span class="line">    document.addEventListener(&quot;dragend&quot;,function(e)&#123;</span><br><span class="line">        e.target.style.opacity=1;</span><br><span class="line">        e.target.parentNode.style.borderColor=&quot;red&quot;;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    /*下面几个方法的事件源是目标元素，而不是被拖拽的元素*/</span><br><span class="line">    /*当将当前元素拖拽到另外一个元素上时触发*/</span><br><span class="line">    document.addEventListener(&quot;dragenter&quot;,function(e)&#123;</span><br><span class="line">        if(e.target.className==&quot;div2&quot;)&#123;</span><br><span class="line">            e.target.style.borderColor=&quot;pink&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else if(e.target.className==&quot;div1&quot;)&#123;</span><br><span class="line">            e.target.style.borderColor=&quot;red&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    /*拖拽元素在目标元素上移动时触发*/</span><br><span class="line">    document.addEventListener(&quot;dragover&quot;,function(e)&#123;</span><br><span class="line">        /*默认情况下，一个元素不能拖拽到另外一个元素内，如果想允许拖拽，我们必须阻止默认的事件冒泡*/</span><br><span class="line">        e.preventDefault();</span><br><span class="line">    &#125;);</span><br><span class="line">    /*当拖拽元素离开目标元素时触发*/</span><br><span class="line">    document.addEventListener(&quot;dragleave&quot;,function(e)&#123;</span><br><span class="line">        if(e.target.className==&quot;div2&quot;)&#123;</span><br><span class="line">            e.target.style.borderColor=&quot;blue&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    /*当拖拽元素在目标元素上松开的时候触发*/</span><br><span class="line">    document.addEventListener(&quot;drop&quot;,function(e)&#123;</span><br><span class="line">        //1.阻止事件冒泡</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        if(e.target.className==&quot;div2&quot; || e.target.className==&quot;div1&quot;)&#123;</span><br><span class="line">            //2.还原目标元素的默认样式</span><br><span class="line">            e.target.style.borderColor=&quot;blue&quot;;</span><br><span class="line">            //3.获取被拖拽元素的id</span><br><span class="line">            var id= e.dataTransfer.getData(&quot;Text&quot;);</span><br><span class="line">            //4.追加被拖拽元素到目标元素</span><br><span class="line">            e.target.appendChild(document.getElementById(id));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="web存储"><a class="markdownIt-Anchor" href="#web存储">#</a> web 存储</h4>
<p>Window.sessionStorage</p>
<p>a) 特点：</p>
<p>i. 生命周期为关闭浏览器窗口：相当于存储在当前页面的内内存中</p>
<p>ii. 在同一个窗口下数据可以共享 (在当前页面下可以获取到，换另外一个页面下不能获取到)</p>
<p>b) 方法介绍：(两种存储方式的方法一致)</p>
<p>i. SetItem (key,value): 设置数据，以键值对的方式</p>
<p>ii. getItem (key): 通过指定的键获取对应的值内容</p>
<p>iii. removeItem (key): 删除指定的 key 及对应的值内容</p>
<p>iv. clear (): 清空所有存储内容</p>
<p>c) 使用说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var userData=document.getElementById(&quot;userName&quot;);</span><br><span class="line">    //存储数据</span><br><span class="line">    document.getElementById(&quot;setData&quot;).onclick=function()&#123;</span><br><span class="line">        window.sessionStorage.setItem(&quot;userName&quot;,userData.value);</span><br><span class="line">    &#125;</span><br><span class="line">    //获取数据</span><br><span class="line">    document.getElementById(&quot;getData&quot;).onclick=function()&#123;</span><br><span class="line">        var value=window.sessionStorage.getItem(&quot;userName&quot;);</span><br><span class="line">        alert(value);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>Window.localStorage</li>
</ul>
<p>a) 特点：</p>
<p>i. 永久生效，除非手动删除：存储在硬盘上</p>
<p>ii. 可以多窗口共享。但是不能跨浏览器</p>
<p>b) 使用说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    var userData=document.getElementById(&quot;userName&quot;);</span><br><span class="line">    //存储数据</span><br><span class="line">    document.getElementById(&quot;setData&quot;).onclick=function()&#123;</span><br><span class="line">        window.localStorage.setItem(&quot;userName&quot;,userData.value);</span><br><span class="line">    &#125;</span><br><span class="line">    //获取数据</span><br><span class="line">    document.getElementById(&quot;getData&quot;).onclick=function()&#123;</span><br><span class="line">        var value=window.localStorage.getItem(&quot;userName&quot;);</span><br><span class="line">        alert(value);</span><br><span class="line">    &#125;</span><br><span class="line">    //删除数据</span><br><span class="line">    document.getElementById(&quot;removeData&quot;).onclick=function()&#123;</span><br><span class="line">        window.localStorage.removeItem(&quot;userName&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id="多媒体自定义视频播放器"><a class="markdownIt-Anchor" href="#多媒体自定义视频播放器">#</a> 多媒体–自定义视频播放器</h4>
<p><span class="exturl" data-url="aHR0cDovL3d3dy53M3NjaG9vbC5jb20uY24vdGFncy9odG1sX3JlZl9hdWRpb192aWRlb19kb20uYXNw">http://www.w3school.com.cn/tags/html_ref_audio_video_dom.asp</span></p>
<ol>
<li>常用方法：load () 加载、  play () 播放、  pause () 暂停</li>
</ol>
<p>Jq 没有提供对视频播放控件的方式，也就意味着如果要操作视频播放，必须使用原生的 js 方法 —dom 元素</p>
<p>​	2. 常用属性：</p>
<p>a) currentTime 视频播放的当前进度、</p>
<p>b) duration: 视频的总时间  100000/60</p>
<p>c) paused: 视频播放的状态.</p>
<p>​	3. 常用事件：</p>
<p>a) oncanplay: 事件在用户可以开始播放视频 / 音频（audio/video）时触发。</p>
<p>b) ontimeupdate: 通过该事件来报告当前的播放进度.</p>
<p>c) onended: 播放完时触发 — 重置</p>
<ul>
<li>案例</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//页面代码</span><br><span class="line">&lt;h3 class=&quot;playerTitle&quot;&gt;视频播放器&lt;/h3&gt;</span><br><span class="line">&lt;div class=&quot;player&quot;&gt;</span><br><span class="line">    &lt;video src=&quot;../mp3/test.mp4&quot;&gt;&lt;/video&gt;</span><br><span class="line">    &lt;div class=&quot;controls&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; class=&quot;switch fa fa-pause&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;a href=&quot;javascript:;&quot; class=&quot;expand fa fa-expand&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;div class=&quot;progress&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;bar&quot;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;loaded&quot;&gt;&lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;elapse&quot;&gt;&lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;time&quot;&gt;</span><br><span class="line">            &lt;span class=&quot;currentTime&quot;&gt;00:00:00&lt;/span&gt;</span><br><span class="line">            \</span><br><span class="line">            &lt;span class=&quot;totalTime&quot;&gt;00:00:00&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//js代码</span><br><span class="line">&lt;script src=&quot;../js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    /*获取到播放器*/</span><br><span class="line">    var video=$(&quot;video&quot;)[0];</span><br><span class="line">    /*暂停-播放切换*/</span><br><span class="line">    $(&quot;.switch&quot;).click(function()&#123;</span><br><span class="line">        //1.切换样式，从暂停切换到播放，或者从播放切换到暂停</span><br><span class="line">        $(this).toggleClass(&quot;fa-pause fa-play&quot;);</span><br><span class="line">        //2.修改播放器的状态</span><br><span class="line">        if(video.paused)&#123;</span><br><span class="line">            video.play();</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            video.pause();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    /*全屏*/</span><br><span class="line">    $(&quot;.expand&quot;).click(function()&#123;</span><br><span class="line">        video.webkitRequestFullScreen();</span><br><span class="line">    &#125;);</span><br><span class="line">    /*当可以进行播放的时候触发oncanplay*/</span><br><span class="line">    video.oncanplay=function()&#123;</span><br><span class="line">        setTimeout(function()&#123;</span><br><span class="line">            video.style.display=&quot;block&quot;;</span><br><span class="line">            //1.获取视频的总时长,结果以秒作为单位</span><br><span class="line">            var duration=video.duration;</span><br><span class="line">            /*console.log(duration);*/  //256.278</span><br><span class="line">            //2.计算 时  分  秒</span><br><span class="line">            var hour= Math.floor(duration/3600);</span><br><span class="line">            var menite= Math.floor(duration%3600/60);</span><br><span class="line">            var second=Math.floor(duration%60);</span><br><span class="line">            //3.将时分秒信息填充到总时长span中</span><br><span class="line">            //3.1 设置时分秒的格式</span><br><span class="line">            hour=hour&lt;10?&quot;0&quot;+hour:hour;</span><br><span class="line">            menite=menite&lt;10?&quot;0&quot;+menite:menite;</span><br><span class="line">            second=second&lt;10?&quot;0&quot;+second:second;</span><br><span class="line">            //3.2填充</span><br><span class="line">            $(&quot;.totalTime&quot;).html(hour+&quot;:&quot;+menite+&quot;:&quot;+second);</span><br><span class="line">        &#125;,2000);</span><br><span class="line">    &#125;</span><br><span class="line">    /*当视频在播放的时候，会触发下下面的方法ontimeupdate*/</span><br></pre></td></tr></table></figure>
<h4 id="应用缓存"><a class="markdownIt-Anchor" href="#应用缓存">#</a> 应用缓存</h4>
<ol>
<li>
<p><strong>概念</strong>：使用 HTML5，通过创建 cache manifest 文件，可以轻松地创建 web 应用的离线版本</p>
</li>
<li>
<p><strong>优势</strong>：</p>
<p>a) 可配置需要缓存的资源</p>
<p>b) 网络无连接应用仍可用</p>
<p>c) 本地读取缓存资源，提升访问速度，增强用户体验</p>
<p>d) 减少请求，缓解服务器负担</p>
</li>
<li>
<p><strong>Cache Manifest 基础</strong>：</p>
<p><strong>a)</strong> 如需启用应用程序缓存，请在文档的 <html> 标签中包含 manifest 属性：</p>
</li>
</ol>
<!DOCTYPE HTML>
<html manifest="demo.appcache">
<p>…</p>
</html>
<p>​	<strong>b)</strong> 每个指定了 manifest 的页面在用户对其访问时都会被缓存。如果未指定 manifest 属性，则页面不会被缓存（除非在 manifest 文件中直接指定了该页面）。</p>
<p>​	<strong>c)</strong> manifest 文件的建议的文件扩展名是：&quot;.appcache&quot;。</p>
<p>​	<strong>d)</strong> 注意，manifest 文件需要配置正确的 MIME-type，即 “text/cache-manifest”。必须在 web 服务器上进行配置</p>
<ol start="4">
<li>
<p><strong>Manifest 文件</strong>：</p>
<p><strong>a)</strong> 概念：manifest 文件是简单的文本文件，它告知浏览器被缓存的内容（以及不缓存的内容）</p>
<p><strong>b)</strong> manifest 文件可分为三个部分</p>
<p>​	Ø CACHE MANIFEST – 开始</p>
<p>​	Ø CACHE 在此标题下列出的文件将在首次下载后进行缓存</p>
<p>​	Ø NETWORK - 在此标题下列出的文件需要与服务器的连接，且不会被缓存</p>
<p>​	Ø FALLBACK - 在此标题下列出的文件规定当页面无法访问时的回退页面（比如 404 页面）</p>
<p><strong>c)</strong> CACHE MANIFEST 说明：</p>
<p>​	CACHE MANIFEST，放置在第一行，是必需的：</p>
</li>
</ol>
<p>----------------------------------------------------------------------------------------------------</p>
<p>CACHE ：</p>
<p>/theme.css</p>
<p>/logo.gif</p>
<p>/main.js</p>
<p>----------------------------------------------------------------------------------------------------</p>
<p>​	上面的 manifest 文件列出了三个资源：一个 CSS 文件，一个 GIF 图像，	以及一个 JavaScript 文件。当 manifest 文件加载后，浏览器会从网站的	根目录下载这三个文件。然后，无论用户何时与因特网断开连接，这些资	源依然是可用的</p>
<p><strong>d)</strong> NETWORK 说明：</p>
<p>​	NETWORK 小节规定文件 “login.asp” 永远不会被缓存，且离线时是不可	用的，如</p>
<hr>
<p>​	NETWORK:</p>
<p>login.asp</p>
<p>----------------------------------------------------------------------------------------------------</p>
<p>​	<strong>e)</strong> FALLBACK 说明：</p>
<p>​		FALLBACK 小节规定如果无法建立因特网连接，就使用指定的资源代替		所请求的 url 的资源，如：</p>
<p>------------------------------------------------------------------------------------------------------</p>
<p>FALLBACK:</p>
<p>/html5/ /404.html</p>
<p>-------------------------------------------------------------------------------------------------------</p>
<p>注释：当 html5 资源在离线状态下无法请求的时候，就使用 404.html 代替</p>
<p><strong>f)</strong> 其它：</p>
<p>​	1、CACHE: 可以省略，这种情况下将需要缓存的资源写在 CACHE MANIFEST</p>
<p>​	2、可以指定多个 CACHE: NETWORK: FALLBACK:，无顺序限制</p>
<p>​	3、# 表示注释，只有当 demo.appcache 文件内容发生改变时或者手动清除缓存后，才会重新缓存。</p>
<p>​	4、chrome 可以通过 chrome://appcache-internals/ 工具和离线（offline）模式来调试管理应用缓存</p>
<p><strong>g)</strong> 更新缓存：</p>
<p>​	一旦文件被缓存，则浏览器会继续展示已缓存的版本，即使修改了服务器	上的文件。为了确保浏览器更新缓存，也需要更新 manifest 文件，也就	意味着一旦应用被缓存，它就会保持缓存直到发生下列情况：</p>
<ol>
<li>
<p>用户清空浏览器缓存</p>
</li>
<li>
<p>manifest 文件被修改（参阅下面的提示）</p>
</li>
<li>
<p>由程序来更新应用缓存</p>
</li>
</ol>
<p>说明：更新注释行中的日期和版本号是一种使浏览器重新缓存文件的办法</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>Uniapp基础知识</title>
    <url>/2022/11/22/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Uniapp%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h3 id="uni-app的基本使用"><a class="markdownIt-Anchor" href="#uni-app的基本使用">#</a> uni-app 的基本使用</h3>
<p>基础部分：</p>
<ul>
<li>环境搭建</li>
<li>使用 Git 管理项目</li>
<li>页面外观配置</li>
<li>数据绑定</li>
<li>uni-app 的生命周期</li>
<li>组件的使用</li>
<li>uni-app 中样式学习</li>
<li>在 uni-app 中使用字体图标和开启 scss</li>
<li>条件注释跨端兼容</li>
<li>uni 中的事件</li>
<li>导航跳转</li>
<li>组件创建和通讯，及组件的生命周期</li>
<li>uni-app 中使用 uni-ui 库</li>
</ul>
<h4 id="uni-app介绍-官方网页"><a class="markdownIt-Anchor" href="#uni-app介绍-官方网页">#</a> uni-app 介绍 <span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL3Jlc291cmNl">官方网页</span></h4>
<p><code>uni-app</code>  是一个使用 <span class="exturl" data-url="aHR0cHM6Ly92dWVqcy5vcmcv">Vue.js</span> 开发所有前端应用的框架，开发者编写一套代码，可发布到 iOS、Android、H5、以及各种小程序（微信 / 支付宝 / 百度 / 头条 / QQ / 钉钉）等多个平台。</p>
<p>即使不跨端， <code>uni-app</code>  同时也是更好的小程序开发框架。</p>
<p>具有 vue 和微信小程序的开发经验，可快速上手 uni-app</p>
<p>为什么要去学习 uni-app？</p>
<p>相对开发者来说，减少了学习成本，因为只学会 uni-app 之后，即可开发出 iOS、Android、H5、以及各种小程序的应用，不需要再去学习开发其他应用的框架，相对公司而言，也大大减少了开发成本。</p>
<h4 id="环境搭建"><a class="markdownIt-Anchor" href="#环境搭建">#</a> 环境搭建</h4>
<p>安装编辑器 HbuilderX  <span class="exturl" data-url="aHR0cHM6Ly93d3cuZGNsb3VkLmlvL2hidWlsZGVyeC5odG1s">下载地址</span></p>
<p>HBuilderX 是通用的前端开发工具，但为 <code>uni-app</code>  做了特别强化。</p>
<p>下载 App 开发版，可开箱即用</p>
<p>安装微信开发者工具 <span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vbWluaXByb2dyYW0vZGV2L2RldnRvb2xzL2Rvd25sb2FkLmh0bWw=">下载地址</span></p>
<h4 id="使用git管理项目"><a class="markdownIt-Anchor" href="#使用git管理项目">#</a> 使用 Git 管理项目</h4>
<h5 id="httpswwwescookcndocs-uni-shopmds1starthtml_1-6-1-本地管理"><a class="markdownIt-Anchor" href="#httpswwwescookcndocs-uni-shopmds1starthtml_1-6-1-本地管理">#</a> <span class="exturl" data-url="aHR0cHM6Ly93d3cuZXNjb29rLmNuL2RvY3MtdW5pLXNob3AvbWRzLzEuc3RhcnQuaHRtbCNfMS02LTEtJUU2JTlDJUFDJUU1JTlDJUIwJUU3JUFFJUExJUU3JTkwJTg2">https://www.escook.cn/docs-uni-shop/mds/1.start.html#_1-6-1 - 本地管理</span></h5>
<h4 id="利用hbuilderx初始化项目"><a class="markdownIt-Anchor" href="#利用hbuilderx初始化项目">#</a> 利用 HbuilderX 初始化项目</h4>
<ul>
<li>
<p>点击 HbuilderX 菜单栏文件 &gt; 项目 &gt; 新建</p>
</li>
<li>
<p>选择 uni-app, 填写项目名称，项目创建的目录</p>
<p><img data-src="./images/create.jpg" alt=""></p>
</li>
</ul>
<h4 id="运行项目"><a class="markdownIt-Anchor" href="#运行项目">#</a> 运行项目</h4>
<p>在菜单栏中点击运行，运行到浏览器，选择浏览器即可运行</p>
<p>在微信开发者工具里运行：进入 hello-uniapp 项目，点击工具栏的运行 -&gt; 运行到小程序模拟器 -&gt; 微信开发者工具，即可在微信开发者工具里面体验 uni-app</p>
<p>在微信开发者工具里运行：进入 hello-uniapp 项目，点击工具栏的运行 -&gt; 运行到手机或模拟器 -&gt; 选择调式的手机</p>
<p><strong>注意：</strong></p>
<ul>
<li>如果是第一次使用，需要先配置小程序 ide 的相关路径，才能运行成功</li>
<li>微信开发者工具在设置中安全设置，服务端口开启</li>
</ul>
<h4 id="介绍项目目录和文件作用"><a class="markdownIt-Anchor" href="#介绍项目目录和文件作用">#</a> 介绍项目目录和文件作用</h4>
<p><code>pages.json</code>  文件用来对 uni-app 进行全局配置，决定页面文件的路径、窗口样式、原生的导航栏、底部的原生 tabbar 等</p>
<p><code>manifest.json</code>  文件是应用的配置文件，用于指定应用的名称、图标、权限等。</p>
<p><code>App.vue</code>  是我们的跟组件，所有页面都是在 <code>App.vue</code>  下进行切换的，是页面入口文件，可以调用应用的生命周期函数。</p>
<p><code>main.js</code>  是我们的项目入口文件，主要作用是初始化 <code>vue</code>  实例并使用需要的插件。</p>
<p><code>uni.scss</code>  文件的用途是为了方便整体控制应用的风格。比如按钮颜色、边框风格， <code>uni.scss</code>  文件里预置了一批 scss 变量预置。</p>
<figure class="highlight plaintext"><figcaption><span>就是打包目录，在这里有各个平台的打包文件</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">```pages``` 所有的页面存放目录</span><br><span class="line"></span><br><span class="line">```static``` 静态资源目录，例如图片等</span><br><span class="line"></span><br><span class="line">```components``` 组件存放目录</span><br><span class="line"></span><br><span class="line">为了实现多端兼容，综合考虑编译速度、运行性能等因素，`uni-app` 约定了如下开发规范：</span><br><span class="line"></span><br><span class="line">- 页面文件遵循 [Vue 单文件组件 (SFC) 规范](https://vue-loader.vuejs.org/zh/spec.html)</span><br><span class="line">- 组件标签靠近小程序规范，详见[uni-app 组件规范](https://uniapp.dcloud.io/component/README)</span><br><span class="line">- 接口能力（JS API）靠近微信小程序规范，但需将前缀 `wx` 替换为 `uni`，详见[uni-app接口规范](https://uniapp.dcloud.io/api/README)</span><br><span class="line">- 数据绑定及事件处理同 `Vue.js` 规范，同时补充了App及页面的生命周期</span><br><span class="line">- 为兼容多端运行，建议使用flex布局进行开发</span><br><span class="line"></span><br><span class="line">#### 全局配置和页面配置</span><br><span class="line"></span><br><span class="line">##### 通过globalStyle进行全局配置</span><br><span class="line"></span><br><span class="line">用于设置应用的状态栏、导航条、标题、窗口背景色等。[详细文档](https://uniapp.dcloud.io/collocation/pages?id=globalstyle)</span><br><span class="line"></span><br><span class="line">| 属性                         | 类型     | 默认值  | 描述                                                         |</span><br><span class="line">| ---------------------------- | -------- | ------- | ------------------------------------------------------------ |</span><br><span class="line">| navigationBarBackgroundColor | HexColor | #F7F7F7 | 导航栏背景颜色（同状态栏背景色）                             |</span><br><span class="line">| navigationBarTextStyle       | String   | white   | 导航栏标题颜色及状态栏前景颜色，仅支持 black/white           |</span><br><span class="line">| navigationBarTitleText       | String   |         | 导航栏标题文字内容                                           |</span><br><span class="line">| backgroundColor              | HexColor | #ffffff | 窗口的背景色                                                 |</span><br><span class="line">| backgroundTextStyle          | String   | dark    | 下拉 loading 的样式，仅支持 dark / light                     |</span><br><span class="line">| enablePullDownRefresh        | Boolean  | false   | 是否开启下拉刷新，详见[页面生命周期](https://uniapp.dcloud.io/use?id=%e9%a1%b5%e9%9d%a2%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f)。 |</span><br><span class="line">| onReachBottomDistance        | Number   | 50      | 页面上拉触底事件触发时距页面底部距离，单位只支持px，详见[页面生命周期](https://uniapp.dcloud.io/use?id=%e9%a1%b5%e9%9d%a2%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f) |</span><br><span class="line"></span><br><span class="line">##### 创建新的message页面</span><br><span class="line"></span><br><span class="line">右键pages新建message目录，在message目录下右键新建.vue文件,并选择基本模板</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;view&gt;</span><br><span class="line">		这是信息页面</span><br><span class="line">	&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h5 id="通过pages来配置页面"><a class="markdownIt-Anchor" href="#通过pages来配置页面">#</a> 通过 pages 来配置页面</h5>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>默认值</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>path</td>
<td>String</td>
<td></td>
<td>配置页面路径</td>
</tr>
<tr>
<td>style</td>
<td>Object</td>
<td></td>
<td>配置页面窗口表现，配置项参考 <span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2NvbGxvY2F0aW9uL3BhZ2VzP2lkPXN0eWxl">pageStyle</span></td>
</tr>
</tbody>
</table>
<p>pages 数组数组中第一项表示应用启动页</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&quot;pages&quot;: [ 、</span><br><span class="line">		&#123;</span><br><span class="line">			&quot;path&quot;:&quot;pages/message/message&quot;</span><br><span class="line">		&#125;,</span><br><span class="line">		&#123;</span><br><span class="line">			&quot;path&quot;: &quot;pages/index/index&quot;,</span><br><span class="line">			&quot;style&quot;: &#123;</span><br><span class="line">				&quot;navigationBarTitleText&quot;: &quot;uni-app&quot;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	]</span><br></pre></td></tr></table></figure>
<p>通过 style 修改页面的标题和导航栏背景色，并且设置 h5 下拉刷新的特有样式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;pages&quot;</span>: [ <span class="comment">//pages数组中第一项表示应用启动页，参考：https://uniapp.dcloud.io/collocation/pages</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="string">&quot;path&quot;</span>:<span class="string">&quot;pages/message/message&quot;</span>,</span><br><span class="line">			<span class="string">&quot;style&quot;</span>: &#123;</span><br><span class="line">				<span class="string">&quot;navigationBarBackgroundColor&quot;</span>: <span class="string">&quot;#007AFF&quot;</span>,</span><br><span class="line">				<span class="string">&quot;navigationBarTextStyle&quot;</span>: <span class="string">&quot;white&quot;</span>,</span><br><span class="line">				<span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">				<span class="string">&quot;disableScroll&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">				<span class="string">&quot;h5&quot;</span>: &#123;</span><br><span class="line">					<span class="string">&quot;pullToRefresh&quot;</span>: &#123;</span><br><span class="line">						<span class="string">&quot;color&quot;</span>: <span class="string">&quot;#007AFF&quot;</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	]</span><br></pre></td></tr></table></figure>
<h5 id="配置tabbar"><a class="markdownIt-Anchor" href="#配置tabbar">#</a> 配置 tabbar</h5>
<p>如果应用是一个多 tab 应用，可以通过 tabBar 配置项指定 tab 栏的表现，以及 tab 切换时显示的对应页。</p>
<p><strong>Tips</strong></p>
<ul>
<li>当设置 position 为 top 时，将不会显示 icon</li>
<li>tabBar 中的 list 是一个数组，只能配置最少 2 个、最多 5 个 tab，tab 按数组的顺序排序。</li>
</ul>
<p><strong>属性说明：</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>必填</th>
<th>默认值</th>
<th>描述</th>
<th>平台差异说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>color</td>
<td>HexColor</td>
<td>是</td>
<td></td>
<td>tab 上的文字默认颜色</td>
<td></td>
</tr>
<tr>
<td>selectedColor</td>
<td>HexColor</td>
<td>是</td>
<td></td>
<td>tab 上的文字选中时的颜色</td>
<td></td>
</tr>
<tr>
<td>backgroundColor</td>
<td>HexColor</td>
<td>是</td>
<td></td>
<td>tab 的背景色</td>
<td></td>
</tr>
<tr>
<td>borderStyle</td>
<td>String</td>
<td>否</td>
<td>black</td>
<td>tabbar 上边框的颜色，仅支持 black/white</td>
<td>App 2.3.4+ 支持其他颜色值</td>
</tr>
<tr>
<td>list</td>
<td>Array</td>
<td>是</td>
<td></td>
<td>tab 的列表，详见 list 属性说明，最少 2 个、最多 5 个 tab</td>
<td></td>
</tr>
<tr>
<td>position</td>
<td>String</td>
<td>否</td>
<td>bottom</td>
<td>可选值 bottom、top</td>
<td>top 值仅微信小程序支持</td>
</tr>
</tbody>
</table>
<p>其中 list 接收一个数组，数组中的每个项都是一个对象，其属性值如下：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>必填</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>pagePath</td>
<td>String</td>
<td>是</td>
<td>页面路径，必须在 pages 中先定义</td>
</tr>
<tr>
<td>text</td>
<td>String</td>
<td>是</td>
<td>tab 上按钮文字，在 5+APP 和 H5 平台为非必填。例如中间可放一个没有文字的 + 号图标</td>
</tr>
<tr>
<td>iconPath</td>
<td>String</td>
<td>否</td>
<td>图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，当 postion 为 top 时，此参数无效，不支持网络图片，不支持字体图标</td>
</tr>
<tr>
<td>selectedIconPath</td>
<td>String</td>
<td>否</td>
<td>选中时的图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px ，当 postion 为 top 时，此参数无效</td>
</tr>
</tbody>
</table>
<p>案例代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">		<span class="string">&quot;list&quot;</span>: [</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="string">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span>,</span><br><span class="line">				<span class="string">&quot;pagePath&quot;</span>:<span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">				<span class="string">&quot;iconPath&quot;</span>:<span class="string">&quot;static/tabs/home.png&quot;</span>,</span><br><span class="line">				<span class="string">&quot;selectedIconPath&quot;</span>:<span class="string">&quot;static/tabs/home-active.png&quot;</span></span><br><span class="line">			&#125;,</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="string">&quot;text&quot;</span>: <span class="string">&quot;信息&quot;</span>,</span><br><span class="line">				<span class="string">&quot;pagePath&quot;</span>:<span class="string">&quot;pages/message/message&quot;</span>,</span><br><span class="line">				<span class="string">&quot;iconPath&quot;</span>:<span class="string">&quot;static/tabs/message.png&quot;</span>,</span><br><span class="line">				<span class="string">&quot;selectedIconPath&quot;</span>:<span class="string">&quot;static/tabs/message-active.png&quot;</span></span><br><span class="line">			&#125;,</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="string">&quot;text&quot;</span>: <span class="string">&quot;我们&quot;</span>,</span><br><span class="line">				<span class="string">&quot;pagePath&quot;</span>:<span class="string">&quot;pages/contact/contact&quot;</span>,</span><br><span class="line">				<span class="string">&quot;iconPath&quot;</span>:<span class="string">&quot;static/tabs/contact.png&quot;</span>,</span><br><span class="line">				<span class="string">&quot;selectedIconPath&quot;</span>:<span class="string">&quot;static/tabs/contact-active.png&quot;</span></span><br><span class="line">			&#125;</span><br><span class="line">		]</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<h5 id="condition启动模式配置"><a class="markdownIt-Anchor" href="#condition启动模式配置">#</a> condition 启动模式配置</h5>
<p>启动模式配置，仅开发期间生效，用于模拟直达页面的场景，如：小程序转发后，用户点击所打开的页面。</p>
<p><strong>属性说明：</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>是否必填</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>current</td>
<td>Number</td>
<td>是</td>
<td>当前激活的模式，list 节点的索引值</td>
</tr>
<tr>
<td>list</td>
<td>Array</td>
<td>是</td>
<td>启动模式列表</td>
</tr>
</tbody>
</table>
<p><strong>list 说明：</strong></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>类型</th>
<th>是否必填</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>String</td>
<td>是</td>
<td>启动模式名称</td>
</tr>
<tr>
<td>path</td>
<td>String</td>
<td>是</td>
<td>启动页面路径</td>
</tr>
<tr>
<td>query</td>
<td>String</td>
<td>否</td>
<td>启动参数，可在页面的 <span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL3VzZT9pZD0lZTklYTElYjUlZTklOWQlYTIlZTclOTQlOWYlZTUlOTElYmQlZTUlOTElYTglZTYlOWMlOWY=">onLoad</span> 函数里获得</td>
</tr>
</tbody>
</table>
<h4 id="组件的基本使用"><a class="markdownIt-Anchor" href="#组件的基本使用">#</a> 组件的基本使用</h4>
<p>uni-app 提供了丰富的基础组件给开发者，开发者可以像搭积木一样，组合各种组件拼接称自己的应用</p>
<p>uni-app 中的组件，就像  <code>HTML</code>  中的  <code>div</code>  、 <code>p</code> 、 <code>span</code>  等标签的作用一样，用于搭建页面的基础结构</p>
<h5 id="text文本组件的用法"><a class="markdownIt-Anchor" href="#text文本组件的用法">#</a> text 文本组件的用法</h5>
<h6 id="001-text-组件的属性"><a class="markdownIt-Anchor" href="#001-text-组件的属性">#</a> 001 - text 组件的属性</h6>
<table>
<thead>
<tr>
<th style="text-align:center">属性</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">默认值</th>
<th style="text-align:center">必填</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">selectable</td>
<td style="text-align:center">boolean</td>
<td style="text-align:center">false</td>
<td style="text-align:center">否</td>
<td style="text-align:center">文本是否可选</td>
</tr>
<tr>
<td style="text-align:center">space</td>
<td style="text-align:center">string</td>
<td style="text-align:center">.</td>
<td style="text-align:center">否</td>
<td style="text-align:center">显示连续空格，可选参数： <code>ensp</code> 、 <code>emsp</code> 、 <code>nbsp</code></td>
</tr>
<tr>
<td style="text-align:center">decode</td>
<td style="text-align:center">boolean</td>
<td style="text-align:center">false</td>
<td style="text-align:center">否</td>
<td style="text-align:center">是否解码</td>
</tr>
</tbody>
</table>
<ul>
<li><code>text</code>  组件相当于行内标签、在同一行显示</li>
<li>除了文本节点以外的其他节点都无法长按选中</li>
</ul>
<h6 id="002-代码案例"><a class="markdownIt-Anchor" href="#002-代码案例">#</a> 002 - 代码案例</h6>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 长按文本是否可选 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>=<span class="string">&#x27;true&#x27;</span>&gt;</span>来了老弟<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 显示连续空格的方式 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">space</span>=<span class="string">&#x27;ensp&#x27;</span>&gt;</span>来了  老弟<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">space</span>=<span class="string">&#x27;emsp&#x27;</span>&gt;</span>来了  老弟<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">space</span>=<span class="string">&#x27;nbsp&#x27;</span>&gt;</span>来了  老弟<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span>&gt;</span>skyblue<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 是否解码 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>=<span class="string">&#x27;true&#x27;</span>&gt;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;lt;</span> <span class="symbol">&amp;gt;</span> <span class="symbol">&amp;amp;</span> <span class="symbol">&amp;apos;</span> <span class="symbol">&amp;ensp;</span> <span class="symbol">&amp;emsp;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="view视图容器组件的用法"><a class="markdownIt-Anchor" href="#view视图容器组件的用法">#</a> view 视图容器组件的用法</h5>
<blockquote>
<p>View 视图容器， 类似于 HTML 中的 div</p>
</blockquote>
<h6 id="001-组件的属性"><a class="markdownIt-Anchor" href="#001-组件的属性">#</a> 001 - 组件的属性</h6>
<p><img data-src="./images/2view.png" alt=""></p>
<h6 id="002-代码案例-2"><a class="markdownIt-Anchor" href="#002-代码案例-2">#</a> 002 - 代码案例</h6>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;box2_active&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&#x27;box1&#x27;</span> <span class="attr">hover-class</span>=<span class="string">&#x27;active&#x27;</span> <span class="attr">hover-stop-propagation</span> <span class="attr">:hover-start-time</span>=<span class="string">&quot;2000&quot;</span> <span class="attr">:hover-stay-time</span>=<span class="string">&#x27;2000&#x27;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="button按钮组件的用法"><a class="markdownIt-Anchor" href="#button按钮组件的用法">#</a> button 按钮组件的用法</h5>
<h6 id="001-组件的属性-2"><a class="markdownIt-Anchor" href="#001-组件的属性-2">#</a> 001 - 组件的属性</h6>
<table>
<thead>
<tr>
<th style="text-align:center">属性名</th>
<th style="text-align:center">类型</th>
<th style="text-align:center">默认值</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">size</td>
<td style="text-align:center">String</td>
<td style="text-align:center">default</td>
<td style="text-align:center">按钮的大小</td>
</tr>
<tr>
<td style="text-align:center">type</td>
<td style="text-align:center">String</td>
<td style="text-align:center">default</td>
<td style="text-align:center">按钮的样式类型</td>
</tr>
<tr>
<td style="text-align:center">plain</td>
<td style="text-align:center">Boolean</td>
<td style="text-align:center">false</td>
<td style="text-align:center">按钮是否镂空，背景色透明</td>
</tr>
<tr>
<td style="text-align:center">disabled</td>
<td style="text-align:center">Boolean</td>
<td style="text-align:center">false</td>
<td style="text-align:center">是否按钮</td>
</tr>
<tr>
<td style="text-align:center">loading</td>
<td style="text-align:center">Boolean</td>
<td style="text-align:center">false</td>
<td style="text-align:center">名称是否带 loading t 图标</td>
</tr>
</tbody>
</table>
<ul>
<li><code>button</code>  组件默认独占一行，设置  <code>size</code>  为  <code>mini</code>  时可以在一行显示多个</li>
</ul>
<h6 id="002-案例代码"><a class="markdownIt-Anchor" href="#002-案例代码">#</a> 002 - 案例代码</h6>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&#x27;mini&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;primary&#x27;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&#x27;mini&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;default&#x27;</span> <span class="attr">disabled</span>=<span class="string">&#x27;true&#x27;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&#x27;mini&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;warn&#x27;</span> <span class="attr">loading</span>=<span class="string">&#x27;true&#x27;</span>&gt;</span>前端<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="image组件的使用"><a class="markdownIt-Anchor" href="#image组件的使用">#</a> image 组件的使用</h5>
<h6 id="image"><a class="markdownIt-Anchor" href="#image">#</a> <span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2NvbXBvbmVudC9pbWFnZT9pZD1pbWFnZQ==">image</span></h6>
<p>图片。</p>
<table>
<thead>
<tr>
<th>属性名</th>
<th>类型</th>
<th>默认值</th>
<th>说明</th>
<th>平台差异说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>src</td>
<td>String</td>
<td></td>
<td>图片资源地址</td>
<td></td>
</tr>
<tr>
<td>mode</td>
<td>String</td>
<td>‘scaleToFill’</td>
<td>图片裁剪、缩放的模式</td>
<td></td>
</tr>
</tbody>
</table>
<p><strong>Tips</strong></p>
<ul>
<li><code>&lt;image&gt;</code>  组件默认宽度 300px、高度 225px；</li>
<li><code>src</code>  仅支持相对路径、绝对路径，支持 base64 码；</li>
<li>页面结构复杂，css 样式太多的情况，使用 image 可能导致样式生效较慢，出现 “闪一下” 的情况，此时设置  <code>image&#123;will-change: transform&#125;</code>  , 可优化此问题。</li>
</ul>
<h4 id="uni-app中的样式"><a class="markdownIt-Anchor" href="#uni-app中的样式">#</a> uni-app 中的样式</h4>
<ul>
<li>
<p>rpx 即响应式 px，一种根据屏幕宽度自适应的动态单位。以 750 宽的屏幕为基准，750rpx 恰好为屏幕宽度。屏幕变宽，rpx 实际显示效果会等比放大。</p>
</li>
<li>
<p>使用 <code>@import</code>  语句可以导入外联样式表， <code>@import</code>  后跟需要导入的外联样式表的相对路径，用 <code>;</code>  表示语句结束</p>
</li>
<li>
<p>支持基本常用的选择器 class、id、element 等</p>
</li>
<li>
<p>在  <code>uni-app</code>  中不能使用  <code>*</code>  选择器。</p>
</li>
<li>
<p><code>page</code>  相当于  <code>body</code>  节点</p>
</li>
<li>
<p>定义在 App.vue 中的样式为全局样式，作用于每一个页面。在 pages 目录下 的 vue 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 App.vue 中相同的选择器。</p>
</li>
<li>
<p><code>uni-app</code>  支持使用字体图标，使用方式与普通  <code>web</code>  项目相同，需要注意以下几点：</p>
<ul>
<li>
<p>字体文件小于 40kb， <code>uni-app</code>  会自动将其转化为 base64 格式；</p>
</li>
<li>
<p>字体文件大于等于 40kb， 需开发者自己转换，否则使用将不生效；</p>
</li>
<li>
<p>字体文件的引用路径推荐使用以～@ 开头的绝对路径。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">    font-family: test1-icon;</span><br><span class="line">    src: url(&#x27;~@/static/iconfont.ttf&#x27;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li>
<p>如何使用 scss 或者 less</p>
</li>
</ul>
<h4 id="uni-app中的数据绑定"><a class="markdownIt-Anchor" href="#uni-app中的数据绑定">#</a> uni-app 中的数据绑定</h4>
<p>在页面中需要定义数据，和我们之前的 vue 一摸一样，直接在 data 中定义数据即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&#x27;hello-uni&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="插值表达式的使用"><a class="markdownIt-Anchor" href="#插值表达式的使用">#</a> 插值表达式的使用</h5>
<ul>
<li>
<p>利用插值表达式渲染基本数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在插值表达式中使用三元运算</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123; flag ? &#x27;我是真的&#x27;:&#x27;我是假的&#x27; &#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li>
<p>基本运算</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;1+1&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="v-bind动态绑定属性"><a class="markdownIt-Anchor" href="#v-bind动态绑定属性">#</a> v-bind 动态绑定属性</h5>
<p>在 data 中定义了一张图片，我们希望把这张图片渲染到页面上</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">img</span>: <span class="string">&#x27;http://destiny001.gitee.io/image/monkey_02.jpg&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>利用 v-bind 进行渲染</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">v-bind:src</span>=<span class="string">&quot;img&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>还可以缩写成:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">:src</span>=<span class="string">&quot;img&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="v-for的使用"><a class="markdownIt-Anchor" href="#v-for的使用">#</a> v-for 的使用</h5>
<p>data 中定以一个数组，最终将数组渲染到页面上</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">arr</span>: [</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;刘能&#x27;</span>, <span class="attr">age</span>: <span class="number">29</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;赵四&#x27;</span>, <span class="attr">age</span>: <span class="number">39</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;宋小宝&#x27;</span>, <span class="attr">age</span>: <span class="number">49</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">name</span>: <span class="string">&#x27;小沈阳&#x27;</span>, <span class="attr">age</span>: <span class="number">59</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>利用 v-for 进行循环</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;view v-<span class="keyword">for</span>=<span class="string">&quot;(item,i) in arr&quot;</span> :key=<span class="string">&quot;i&quot;</span>&gt;名字：&#123;&#123;item.<span class="property">name</span>&#125;&#125;---年龄：&#123;&#123;item.<span class="property">age</span>&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure>
<h4 id="uni中的事件"><a class="markdownIt-Anchor" href="#uni中的事件">#</a> uni 中的事件</h4>
<h5 id="事件绑定"><a class="markdownIt-Anchor" href="#事件绑定">#</a> 事件绑定</h5>
<p>在 uni 中事件绑定和 vue 中是一样的，通过 v-on 进行事件的绑定，也可以简写为 @</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;tapHandle&quot;</span>&gt;</span>点我啊<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>事件函数定义在 methods 中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  tapHandle () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;真的点我了&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="事件传参"><a class="markdownIt-Anchor" href="#事件传参">#</a> 事件传参</h5>
<ul>
<li>
<p>默认如果没有传递参数，事件函数第一个形参为事件对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// template</span><br><span class="line">&lt;button @click=&quot;tapHandle&quot;&gt;点我啊&lt;/button&gt;</span><br><span class="line">// script</span><br><span class="line">methods: &#123;</span><br><span class="line">  tapHandle (e) &#123;</span><br><span class="line">    console.log(e)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果给事件函数传递参数了，则对应的事件函数形参接收的则是传递过来的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// template</span><br><span class="line">&lt;button @click=&quot;tapHandle(1)&quot;&gt;点我啊&lt;/button&gt;</span><br><span class="line">// script</span><br><span class="line">methods: &#123;</span><br><span class="line">  tapHandle (num) &#123;</span><br><span class="line">    console.log(num)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>如果获取事件对象也想传递参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// template</span><br><span class="line">&lt;button @click=&quot;tapHandle(1,$event)&quot;&gt;点我啊&lt;/button&gt;</span><br><span class="line">// script</span><br><span class="line">methods: &#123;</span><br><span class="line">  tapHandle (num,e) &#123;</span><br><span class="line">    console.log(num,e)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="uni的生命周期"><a class="markdownIt-Anchor" href="#uni的生命周期">#</a> uni 的生命周期</h4>
<h5 id="应用的生命周期"><a class="markdownIt-Anchor" href="#应用的生命周期">#</a> 应用的生命周期</h5>
<p>生命周期的概念：一个对象从创建、运行、销毁的整个过程被成为生命周期。</p>
<p>生命周期函数：在生命周期中每个阶段会伴随着每一个函数的触发，这些函数被称为生命周期函数</p>
<p><code>uni-app</code>  支持如下应用生命周期函数：</p>
<table>
<thead>
<tr>
<th>函数名</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>onLaunch</td>
<td>当 <code>uni-app</code>  初始化完成时触发（全局只触发一次）</td>
</tr>
<tr>
<td>onShow</td>
<td>当  <code>uni-app</code>  启动，或从后台进入前台显示</td>
</tr>
<tr>
<td>onHide</td>
<td>当  <code>uni-app</code>  从前台进入后台</td>
</tr>
<tr>
<td>onError</td>
<td>当  <code>uni-app</code>  报错时触发</td>
</tr>
</tbody>
</table>
<h5 id="页面的生命周期"><a class="markdownIt-Anchor" href="#页面的生命周期">#</a> 页面的生命周期</h5>
<p><code>uni-app</code>  支持如下页面生命周期函数：</p>
<table>
<thead>
<tr>
<th>函数名</th>
<th>说明</th>
<th>平台差异说明</th>
<th>最低版本</th>
</tr>
</thead>
<tbody>
<tr>
<td>onLoad</td>
<td>监听页面加载，其参数为上个页面传递的数据，参数类型为 Object（用于页面传参），参考<span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2FwaS9yb3V0ZXI/aWQ9bmF2aWdhdGV0bw==">示例</span></td>
<td></td>
<td></td>
</tr>
<tr>
<td>onShow</td>
<td>监听页面显示。页面每次出现在屏幕上都触发，包括从下级页面点返回露出当前页面</td>
<td></td>
<td></td>
</tr>
<tr>
<td>onReady</td>
<td>监听页面初次渲染完成。</td>
<td></td>
<td></td>
</tr>
<tr>
<td>onHide</td>
<td>监听页面隐藏</td>
<td></td>
<td></td>
</tr>
<tr>
<td>onUnload</td>
<td>监听页面卸载</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="下拉刷新"><a class="markdownIt-Anchor" href="#下拉刷新">#</a> 下拉刷新</h4>
<h5 id="开启下拉刷新"><a class="markdownIt-Anchor" href="#开启下拉刷新">#</a> 开启下拉刷新</h5>
<p>在 uni-app 中有两种方式开启下拉刷新</p>
<ul>
<li>需要在  <code>pages.json</code>  里，找到的当前页面的 pages 节点，并在  <code>style</code>  选项中开启  <code>enablePullDownRefresh</code></li>
<li>通过调用 uni.startPullDownRefresh 方法来开启下拉刷新</li>
</ul>
<h6 id="通过配置文件开启"><a class="markdownIt-Anchor" href="#通过配置文件开启">#</a> 通过配置文件开启</h6>
<p>创建 list 页面进行演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		杭州学科</span><br><span class="line">		<span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">			&#123;&#123;item&#125;&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">arr</span>: [<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过 pages.json 文件中找到当前页面的 pages 节点，并在  <code>style</code>  选项中开启  <code>enablePullDownRefresh</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;path&quot;</span>:<span class="string">&quot;pages/list/list&quot;</span>,</span><br><span class="line">    <span class="string">&quot;style&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="通过api开启"><a class="markdownIt-Anchor" href="#通过api开启">#</a> 通过 API 开启</h6>
<p><span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2FwaS91aS9wdWxsZG93bg==">api 文档</span></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">uni.startPullDownRefresh()</span><br></pre></td></tr></table></figure>
<h5 id="监听下拉刷新"><a class="markdownIt-Anchor" href="#监听下拉刷新">#</a> 监听下拉刷新</h5>
<p>通过 onPullDownRefresh 可以监听到下拉刷新的动作</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">arr</span>: [<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">    startPull () &#123;</span><br><span class="line">      uni.<span class="title function_">startPullDownRefresh</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  onPullDownRefresh () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触发下拉刷新了&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="关闭下拉刷新"><a class="markdownIt-Anchor" href="#关闭下拉刷新">#</a> 关闭下拉刷新</h5>
<p>uni.stopPullDownRefresh()</p>
<p>停止当前页面下拉刷新。</p>
<p>案例演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;startPull&quot;</span>&gt;</span>开启下拉刷新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		杭州学科</span><br><span class="line">		<span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">			&#123;&#123;item&#125;&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">arr</span>: [<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			startPull () &#123;</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">startPullDownRefresh</span>()</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">		onPullDownRefresh () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">this</span>.<span class="property">arr</span> = []</span></span><br><span class="line"><span class="language-javascript">			<span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="variable language_">this</span>.<span class="property">arr</span> = [<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">stopPullDownRefresh</span>()</span></span><br><span class="line"><span class="language-javascript">			&#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="上拉加载"><a class="markdownIt-Anchor" href="#上拉加载">#</a> 上拉加载</h4>
<p>通过在 pages.json 文件中找到当前页面的 pages 节点下 style 中配置 onReachBottomDistance 可以设置距离底部开启加载的距离，默认为 50px</p>
<p>通过 onReachBottom 监听到触底的行为</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;startPull&quot;</span>&gt;</span>开启下拉刷新<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		杭州学科</span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;<span class="name">view</span> <span class="attr">v-for</span>=<span class="string">&quot;(item,index) in arr&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">			&#123;&#123;item&#125;&#125;</span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		data () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			<span class="keyword">return</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				<span class="attr">arr</span>: [<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>,<span class="string">&#x27;前端&#x27;</span>,<span class="string">&#x27;java&#x27;</span>,<span class="string">&#x27;ui&#x27;</span>,<span class="string">&#x27;大数据&#x27;</span>]</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		onReachBottom () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;触底了&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">	view&#123;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">		<span class="attribute">height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">		<span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml">	&#125;</span></span></span><br><span class="line"><span class="language-css"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="网络请求"><a class="markdownIt-Anchor" href="#网络请求">#</a> 网络请求</h4>
<p>在 uni 中可以调用 uni.request 方法进行请求网络请求</p>
<p>需要注意的是：在小程序中网络相关的 API 在使用前需要配置域名白名单。</p>
<p><strong>发送 get 请求</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sendGet&quot;</span>&gt;</span>发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		<span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			sendGet () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				uni.<span class="title function_">request</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">					<span class="attr">url</span>: <span class="string">&#x27;http://localhost:8082/api/getlunbo&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">					<span class="title function_">success</span>(<span class="params">res</span>) &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">						<span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">					&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p><strong>发送 post 请求</strong></p>
<h4 id="数据缓存"><a class="markdownIt-Anchor" href="#数据缓存">#</a> 数据缓存</h4>
<h5 id="unisetstorage"><a class="markdownIt-Anchor" href="#unisetstorage">#</a> <strong>uni.setStorage</strong></h5>
<p><span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2FwaS9zdG9yYWdlL3N0b3JhZ2U/aWQ9c2V0c3RvcmFnZQ==">官方文档</span></p>
<p>将数据存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个异步接口。</p>
<p>代码演示</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setStor&quot;</span>&gt;</span>存储数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		<span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			setStor () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				uni.<span class="title function_">setStorage</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 	<span class="attr">key</span>: <span class="string">&#x27;id&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 	<span class="attr">data</span>: <span class="number">100</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 	success () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 		<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;存储成功&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 	&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				 &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h5 id="unisetstoragesync"><a class="markdownIt-Anchor" href="#unisetstoragesync">#</a> uni.setStorageSync</h5>
<p>将 data 存储在本地缓存中指定的 key 中，会覆盖掉原来该 key 对应的内容，这是一个同步接口。</p>
<p>代码演示</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	<span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;setStor&quot;</span>&gt;</span>存储数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		<span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			setStor () &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">				uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;id&#x27;</span>,<span class="number">100</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">			&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">		&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">	&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h5 id="unigetstorage"><a class="markdownIt-Anchor" href="#unigetstorage">#</a> uni.getStorage</h5>
<p>从本地缓存中异步获取指定 key 对应的内容。</p>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getStorage&quot;</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">id</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			getStorage () &#123;</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">getStorage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">key</span>: <span class="string">&#x27;id&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">success</span>:  <span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">this</span>.<span class="property">id</span> = res.<span class="property">data</span></span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="unigetstoragesync"><a class="markdownIt-Anchor" href="#unigetstoragesync">#</a> uni.getStorageSync</h5>
<p>从本地缓存中同步获取指定 key 对应的内容。</p>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;getStorage&quot;</span>&gt;</span>获取数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			getStorage () &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="keyword">const</span> id = uni.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;id&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">				<span class="variable language_">console</span>.<span class="title function_">log</span>(id)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="uniremovestorage"><a class="markdownIt-Anchor" href="#uniremovestorage">#</a> uni.removeStorage</h5>
<p>从本地缓存中异步移除指定 key。</p>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;removeStorage&quot;</span>&gt;</span>删除数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			removeStorage () &#123;</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">removeStorage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">key</span>: <span class="string">&#x27;id&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">success</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;删除成功&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="uniremovestoragesync"><a class="markdownIt-Anchor" href="#uniremovestoragesync">#</a> uni.removeStorageSync</h5>
<p>从本地缓存中同步移除指定 key。</p>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;removeStorage&quot;</span>&gt;</span>删除数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			removeStorage () &#123;</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">removeStorageSync</span>(<span class="string">&#x27;id&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="上传图片-预览图片"><a class="markdownIt-Anchor" href="#上传图片-预览图片">#</a> 上传图片、预览图片</h4>
<h5 id="上传图片"><a class="markdownIt-Anchor" href="#上传图片">#</a> 上传图片</h5>
<p>uni.chooseImage 方法从本地相册选择图片或使用相机拍照。</p>
<p>案例代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;chooseImg&quot;</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>上传图片<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">image</span> <span class="attr">v-for</span>=<span class="string">&quot;item in imgArr&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">imgArr</span>: []</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			chooseImg () &#123;</span></span><br><span class="line"><span class="language-javascript">				uni.<span class="title function_">chooseImage</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">count</span>: <span class="number">9</span>,</span></span><br><span class="line"><span class="language-javascript">					<span class="attr">success</span>: <span class="function"><span class="params">res</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">						<span class="variable language_">this</span>.<span class="property">imgArr</span> = res.<span class="property">tempFilePaths</span></span></span><br><span class="line"><span class="language-javascript">					&#125;</span></span><br><span class="line"><span class="language-javascript">				&#125;)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="预览图片"><a class="markdownIt-Anchor" href="#预览图片">#</a> 预览图片</h5>
<p>结构</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">image</span> <span class="attr">v-for</span>=<span class="string">&quot;item in imgArr&quot;</span> <span class="attr">:src</span>=<span class="string">&quot;item&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;previewImg(item)&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>预览图片的方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">previewImg (current) &#123;</span><br><span class="line">  uni.<span class="title function_">previewImage</span>(&#123;</span><br><span class="line">    <span class="attr">urls</span>: <span class="variable language_">this</span>.<span class="property">imgArr</span>,</span><br><span class="line">    current</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="条件注释实现跨段兼容"><a class="markdownIt-Anchor" href="#条件注释实现跨段兼容">#</a> 条件注释实现跨段兼容</h4>
<p>条件编译是用特殊的注释作为标记，在编译时根据这些特殊的注释，将注释里面的代码编译到不同平台。</p>
<p>** 写法：** 以 #ifdef 加平台标识 开头，以 #endif 结尾。</p>
<p>平台标识</p>
<table>
<thead>
<tr>
<th>值</th>
<th>平台</th>
<th>参考文档</th>
</tr>
</thead>
<tbody>
<tr>
<td>APP-PLUS</td>
<td>5+App</td>
<td><span class="exturl" data-url="aHR0cDovL3d3dy5odG1sNXBsdXMub3JnL2RvYy8=">HTML5+ 规范</span></td>
</tr>
<tr>
<td>H5</td>
<td>H5</td>
<td></td>
</tr>
<tr>
<td>MP-WEIXIN</td>
<td>微信小程序</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vbWluaXByb2dyYW0vZGV2L2FwaS8=">微信小程序</span></td>
</tr>
<tr>
<td>MP-ALIPAY</td>
<td>支付宝小程序</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLmFsaXBheS5jb20vbWluaS9kZXZlbG9wZXIvZ2V0dGluZy1zdGFydGVk">支付宝小程序</span></td>
</tr>
<tr>
<td>MP-BAIDU</td>
<td>百度小程序</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9zbWFydHByb2dyYW0uYmFpZHUuY29tL2RvY3MvZGV2ZWxvcC90dXRvcmlhbC9jb2RlZGlyLw==">百度小程序</span></td>
</tr>
<tr>
<td>MP-TOUTIAO</td>
<td>头条小程序</td>
<td><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIudG91dGlhby5jb20vZGV2L2NuL21pbmktYXBwL2RldmVsb3AvZnJhbWV3b3JrL2Jhc2ljLXJlZmVyZW5jZS9pbnRyb2R1Y3Rpb24=">头条小程序</span></td>
</tr>
<tr>
<td>MP-QQ</td>
<td>QQ 小程序</td>
<td>（目前仅 cli 版支持）</td>
</tr>
<tr>
<td>MP</td>
<td>微信小程序 / 支付宝小程序 / 百度小程序 / 头条小程序 / QQ 小程序</td>
<td></td>
</tr>
</tbody>
</table>
<h5 id="组件的条件注释"><a class="markdownIt-Anchor" href="#组件的条件注释">#</a> 组件的条件注释</h5>
<p>代码演示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- #ifdef H5 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  h5页面会显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #endif --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #ifdef MP-WEIXIN --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  微信小程序会显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #endif --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #ifdef APP-PLUS --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  app会显示</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- #endif --&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="api的条件注释"><a class="markdownIt-Anchor" href="#api的条件注释">#</a> api 的条件注释</h5>
<p>代码演示</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onLoad () &#123;</span><br><span class="line">  <span class="comment">//#ifdef MP-WEIXIN</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;微信小程序&#x27;</span>)</span><br><span class="line">  <span class="comment">//#endif</span></span><br><span class="line">  <span class="comment">//#ifdef H5</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;h5页面&#x27;</span>)</span><br><span class="line">  <span class="comment">//#endif</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>样式的条件注释</p>
<p>代码演示</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* #ifdef H5 */</span></span><br><span class="line">view&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br><span class="line"><span class="comment">/* #ifdef MP-WEIXIN */</span></span><br><span class="line">view&#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* #endif */</span></span><br></pre></td></tr></table></figure>
<h4 id="uni中的导航跳转"><a class="markdownIt-Anchor" href="#uni中的导航跳转">#</a> uni 中的导航跳转</h4>
<h5 id="利用navigator进行跳转"><a class="markdownIt-Anchor" href="#利用navigator进行跳转">#</a> 利用 navigator 进行跳转</h5>
<p>navigator 详细文档：<span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2NvbXBvbmVudC9uYXZpZ2F0b3I=">文档地址</span></p>
<p>跳转到普通页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;/pages/about/about&quot;</span> <span class="attr">hover-class</span>=<span class="string">&quot;navigator-hover&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>跳转到关于页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>跳转到 tabbar 页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;/pages/message/message&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;switchTab&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>跳转到message页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="利用编程式导航进行跳转"><a class="markdownIt-Anchor" href="#利用编程式导航进行跳转">#</a> 利用编程式导航进行跳转</h5>
<p><a href="%5Buni.navigateTo%5D(https://uniapp.dcloud.io/api/router?id=navigateto)">导航跳转文档</a></p>
<p><strong>利用 navigateTo 进行导航跳转</strong></p>
<p>保留当前页面，跳转到应用内的某个页面，使用 <code>uni.navigateBack</code>  可以返回到原页面。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;goAbout&quot;</span>&gt;</span>跳转到关于页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过 navigateTo 方法进行跳转到普通页面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">goAbout () &#123;</span><br><span class="line">  uni.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/about/about&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>通过 switchTab 跳转到 tabbar 页面</strong></p>
<p>跳转到 tabbar 页面</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;goMessage&quot;</span>&gt;</span>跳转到message页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>通过 switchTab 方法进行跳转</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">goMessage () &#123;</span><br><span class="line">  uni.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/message/message&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>redirectTo 进行跳转</strong></p>
<p>关闭当前页面，跳转到应用内的某个页面。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- template --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;goMessage&quot;</span>&gt;</span>跳转到message页面<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- js --&gt;</span></span><br><span class="line">goMessage () &#123;</span><br><span class="line">  uni.switchTab(&#123;</span><br><span class="line">    url: &#x27;/pages/message/message&#x27;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>通过 onUnload 测试当前组件确实卸载</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onUnload () &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;组件卸载了&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="导航跳转传递参数"><a class="markdownIt-Anchor" href="#导航跳转传递参数">#</a> 导航跳转传递参数</h5>
<p>在导航进行跳转到下一个页面的同时，可以给下一个页面传递相应的参数，接收参数的页面可以通过 onLoad 生命周期进行接收</p>
<p>传递参数的页面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">goAbout () &#123;</span><br><span class="line">  uni.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/about/about?id=80&#x27;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接收参数的页面</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">		onLoad (options) &#123;</span><br><span class="line">			<span class="variable language_">console</span>.<span class="title function_">log</span>(options)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h4 id=""><a class="markdownIt-Anchor" href="#">#</a> </h4>
<h4 id="uni-app中组件的创建"><a class="markdownIt-Anchor" href="#uni-app中组件的创建">#</a> uni-app 中组件的创建</h4>
<p>在 uni-app 中，可以通过创建一个后缀名为 vue 的文件，即创建一个组件成功，其他组件可以将该组件通过 impot 的方式导入，在通过 components 进行注册即可</p>
<ul>
<li>
<p>创建 login 组件，在 component 中创建 login 目录，然后新建 login.vue 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;view&gt;</span><br><span class="line">		这是一个自定义组件</span><br><span class="line">	&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在其他组件中导入该组件并注册</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import login from &quot;@/components/test/test.vue&quot;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>注册组件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">components</span>: &#123;test&#125;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>使用组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;test&gt;&lt;/test&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h5 id="组件的生命周期函数"><a class="markdownIt-Anchor" href="#组件的生命周期函数">#</a> 组件的生命周期函数</h5>
<table>
<thead>
<tr>
<th>beforeCreate</th>
<th>在实例初始化之后被调用。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNiZWZvcmVDcmVhdGU=">详见</span></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>created</td>
<td>在实例创建完成后被立即调用。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNjcmVhdGVk">详见</span></td>
<td></td>
<td></td>
</tr>
<tr>
<td>beforeMount</td>
<td>在挂载开始之前被调用。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNiZWZvcmVNb3VudA==">详见</span></td>
<td></td>
<td></td>
</tr>
<tr>
<td>mounted</td>
<td>挂载到实例上去之后调用。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNtb3VudGVk">详见</span> 注意：此处并不能确定子组件被全部挂载，如果需要子组件完全挂载之后在执行操作可以使用 <code>$nextTick</code> <span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNWdWUtbmV4dFRpY2s=">Vue 官方文档</span></td>
<td></td>
<td></td>
</tr>
<tr>
<td>beforeUpdate</td>
<td>数据更新时调用，发生在虚拟 DOM 打补丁之前。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNiZWZvcmVVcGRhdGU=">详见</span></td>
<td>仅 H5 平台支持</td>
<td></td>
</tr>
<tr>
<td>updated</td>
<td>由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyN1cGRhdGVk">详见</span></td>
<td>仅 H5 平台支持</td>
<td></td>
</tr>
<tr>
<td>beforeDestroy</td>
<td>实例销毁之前调用。在这一步，实例仍然完全可用。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNiZWZvcmVEZXN0cm95">详见</span></td>
<td></td>
<td></td>
</tr>
<tr>
<td>destroyed</td>
<td>Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。<span class="exturl" data-url="aHR0cHM6Ly9jbi52dWVqcy5vcmcvdjIvYXBpLyNkZXN0cm95ZWQ=">详见</span></td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
<h4 id="组件的通讯"><a class="markdownIt-Anchor" href="#组件的通讯">#</a> 组件的通讯</h4>
<h5 id="父组件给子组件传值"><a class="markdownIt-Anchor" href="#父组件给子组件传值">#</a> 父组件给子组件传值</h5>
<p>通过 props 来接受外界传递到组件内部的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;view&gt;</span><br><span class="line">		这是一个自定义组件 &#123;&#123;msg&#125;&#125;</span><br><span class="line">	&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	export default &#123;</span><br><span class="line">		props: [&#x27;msg&#x27;]</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>其他组件在使用 login 组件的时候传递值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;view&gt;</span><br><span class="line">		&lt;test :msg=&quot;msg&quot;&gt;&lt;/test&gt;</span><br><span class="line">	&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	import test from &quot;@/components/test/test.vue&quot;</span><br><span class="line">	export default &#123;</span><br><span class="line">		data () &#123;</span><br><span class="line">			return &#123;</span><br><span class="line">				msg: &#x27;hello&#x27;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		</span><br><span class="line">		components: &#123;test&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<h5 id="子组件给父组件传值"><a class="markdownIt-Anchor" href="#子组件给父组件传值">#</a> 子组件给父组件传值</h5>
<p>通过 $emit 触发事件进行传递参数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		这是一个自定义组件 &#123;&#123;msg&#125;&#125;</span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;sendMsg&quot;</span>&gt;</span>给父组件传值<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">status</span>: <span class="string">&#x27;打篮球&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">props</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="attr">msg</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">type</span>: <span class="title class_">String</span>,</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">value</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			sendMsg () &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="variable language_">this</span>.$emit(<span class="string">&#x27;myEvent&#x27;</span>,<span class="variable language_">this</span>.<span class="property">status</span>)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>父组件定义自定义事件并接收参数</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">test</span> <span class="attr">:msg</span>=<span class="string">&quot;msg&quot;</span> @<span class="attr">myEvent</span>=<span class="string">&quot;getMsg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">import</span> test <span class="keyword">from</span> <span class="string">&quot;@/components/test/test.vue&quot;</span></span></span><br><span class="line"><span class="language-javascript">	<span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">		data () &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="attr">msg</span>: <span class="string">&#x27;hello&#x27;</span></span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">			getMsg (res) &#123;</span></span><br><span class="line"><span class="language-javascript">				<span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">		&#125;,</span></span><br><span class="line"><span class="language-javascript">		</span></span><br><span class="line"><span class="language-javascript">		<span class="attr">components</span>: &#123;test&#125;</span></span><br><span class="line"><span class="language-javascript">	&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h5 id="兄弟组件通讯"><a class="markdownIt-Anchor" href="#兄弟组件通讯">#</a> 兄弟组件通讯</h5>
<h4 id="uni-ui的使用"><a class="markdownIt-Anchor" href="#uni-ui的使用">#</a> uni-ui 的使用</h4>
<p><span class="exturl" data-url="aHR0cHM6Ly91bmlhcHAuZGNsb3VkLmlvL2NvbXBvbmVudC9SRUFETUU/aWQ9dW5pdWk=">uni-ui 文档</span></p>
<p>1、进入 Grid 宫格组件</p>
<p>2、使用 HBuilderX 导入该组件</p>
<p>3、导入该组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">import uniGrid from &quot;@/components/uni-grid/uni-grid.vue&quot;</span><br><span class="line">import uniGridItem from &quot;@/components/uni-grid-item/uni-grid-item.vue&quot;</span><br></pre></td></tr></table></figure>
<p>4、注册组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">components: &#123;uniGrid,uniGridItem&#125;</span><br></pre></td></tr></table></figure>
<p>5、使用组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uni-grid</span> <span class="attr">:column</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">uni-grid-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">uni-grid</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>Uniapp</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>Vue</tag>
        <tag>Uniapp</tag>
      </tags>
  </entry>
  <entry>
    <title>iconfont教程</title>
    <url>/2022/10/26/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/iconfont%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="使用iconfont教程"><a class="markdownIt-Anchor" href="#使用iconfont教程">#</a> 使用 iconfont 教程</h1>
<ol>
<li>
<p>iconfont 选择所需的图标加购</p>
</li>
<li>
<p>购物车中的图标加入项目</p>
</li>
<li>
<p>按需修改图标的名称</p>
</li>
<li>
<p>下载 documen 压缩包</p>
</li>
<li>
<p>将 iconfont.css 中有关图标的代码复制到项目的 iconfont.css 中即可</p>
<p>注意：以下</p>
</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">src: url(&#x27;~@/static/icon/iconfont.ttf&#x27;),</span><br><span class="line">       url(&#x27;~@/static/icon/iconfont.woff2?t=1641780677504&#x27;) format(&#x27;woff2&#x27;),</span><br><span class="line">       url(&#x27;~@/static/icon/iconfont.woff?t=1641780677504&#x27;) format(&#x27;woff&#x27;),</span><br><span class="line">       url(&#x27;~@/static/icon/iconfont.ttf?t=1641780677504&#x27;) format(&#x27;truetype&#x27;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>Uniapp</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>iconfont</tag>
        <tag>阿里巴巴矢量库</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue</title>
    <url>/2022/11/22/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/Vue/</url>
    <content><![CDATA[<h1 id="vue"><a class="markdownIt-Anchor" href="#vue">#</a> VUE</h1>
<h1 id="一-搭建环境"><a class="markdownIt-Anchor" href="#一-搭建环境">#</a> 一、搭建环境</h1>
<h2 id="1-搭建vue项目"><a class="markdownIt-Anchor" href="#1-搭建vue项目">#</a> 1、搭建 vue 项目</h2>
<ul>
<li>使用 vue-cli 搭建 vue 项目</li>
<li>引入 vue-router</li>
<li>引入 vuex</li>
<li>引入<em> element-ui</em></li>
<li>引入<em> tinymce-vue</em></li>
<li>引入<em> axios</em></li>
</ul>
<h2 id="2-在mainjs文件中引入相应组件"><a class="markdownIt-Anchor" href="#2-在mainjs文件中引入相应组件">#</a> 2、在 main.js 文件中引入相应组件</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&quot;element-ui&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-ui/lib/theme-chalk/index.css&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$http</span> = axios;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  router,</span><br><span class="line">  store,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;).$mount(<span class="string">&quot;#app&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="3-编写appvue文件"><a class="markdownIt-Anchor" href="#3-编写appvue文件">#</a> 3、编写 app.vue 文件</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-view /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot;&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#nav &#123;</span><br><span class="line">  padding: 30px;</span><br><span class="line"></span><br><span class="line">  a &#123;</span><br><span class="line">    font-weight: bold;</span><br><span class="line">    color: #2c3e50;</span><br><span class="line"></span><br><span class="line">    &amp;.router-link-exact-active &#123;</span><br><span class="line">      color: #42b983;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="4-在view文件夹中建立视图组件"><a class="markdownIt-Anchor" href="#4-在view文件夹中建立视图组件">#</a> 4、在 view 文件夹中建立视图组件</h2>
<h3 id="loginvue"><a class="markdownIt-Anchor" href="#loginvue">#</a> Login.vue</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h1&gt;hello&lt;/h1&gt;</span><br><span class="line">    &lt;div style=&quot;margin: 20px;&quot;&gt;&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;div-from&quot;&gt;</span><br><span class="line">      &lt;el-form</span><br><span class="line">        :label-position=&quot;labelPosition&quot;</span><br><span class="line">        label-width=&quot;80px&quot;</span><br><span class="line">        :model=&quot;Admin&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;el-form-item label=&quot;用户名:&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;Admin.username&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;密码:&quot;&gt;</span><br><span class="line">          &lt;el-input v-model=&quot;Admin.password&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;onSubmit&quot;&gt;登录&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button&gt;注册&lt;/el-button&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      labelPosition: &#x27;left&#x27;,</span><br><span class="line">      Admin: &#123;</span><br><span class="line">        username: &#x27;8888&#x27;,</span><br><span class="line">        password: &#x27;&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      onSubmit() &#123;</span><br><span class="line">        console.log(&#x27;submit!&#x27;);</span><br><span class="line">        this.$router.push(&#123;name:&#x27;StudentList&#x27;&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.div-from &#123;</span><br><span class="line">  width: 30%;</span><br><span class="line">  margin: auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="studentvue"><a class="markdownIt-Anchor" href="#studentvue">#</a> Student.vue</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;div-from&quot;&gt;</span><br><span class="line">    &lt;h1&gt;Student&#123;&#123; id &#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;el-form ref=&quot;form&quot; :model=&quot;form&quot; label-width=&quot;80px&quot; size=&quot;mini&quot;&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;学号&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.num&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;姓名&quot;&gt;</span><br><span class="line">        &lt;el-input v-model=&quot;form.name&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;班级&quot;&gt;</span><br><span class="line">        &lt;el-select v-model=&quot;form.classname&quot; placeholder=&quot;请选择活动区域&quot;&gt;</span><br><span class="line">          &lt;el-option v-for=&quot;item in options&quot; </span><br><span class="line">                    :key=&quot;item.cid&quot; </span><br><span class="line">                    :label=&quot;item.cname&quot;  </span><br><span class="line">                    :value=&quot;item.cname&quot;&gt;</span><br><span class="line">          &lt;/el-option&gt;</span><br><span class="line">          </span><br><span class="line">        &lt;/el-select&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;活动时间&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;11&quot;&gt;</span><br><span class="line">          &lt;el-date-picker</span><br><span class="line">            type=&quot;date&quot;</span><br><span class="line">            placeholder=&quot;选择日期&quot;</span><br><span class="line">            v-model=&quot;form.time&quot;</span><br><span class="line">            style=&quot;width: 100%;&quot;</span><br><span class="line">          &gt;&lt;/el-date-picker&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;状态&quot;&gt;</span><br><span class="line">        &lt;el-switch</span><br><span class="line">          v-model=&quot;form.status&quot;</span><br><span class="line">          :active-value=&quot;1&quot;</span><br><span class="line">          :inactive-value=&quot;0&quot;</span><br><span class="line">        &gt;&lt;/el-switch&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item label=&quot;图片&quot;&gt;</span><br><span class="line">        &lt;!-- &lt;div class=&quot;block&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;demonstration&quot;&gt;默认&lt;/span&gt;</span><br><span class="line">          &lt;el-image :src=&quot;imageUrl&quot;&gt;&lt;/el-image&gt;</span><br><span class="line">        &lt;/div&gt; --&gt;</span><br><span class="line">        &lt;!-- &lt;el-upload</span><br><span class="line">          class=&quot;avatar-uploader&quot;</span><br><span class="line">          action=&quot;http://127.0.0.1:8080/JsonTest/fileUpload&quot;</span><br><span class="line">          :show-file-list=&quot;false&quot;</span><br><span class="line">          :on-success=&quot;handleSuccess&quot;</span><br><span class="line">         </span><br><span class="line">        &gt;</span><br><span class="line">          &lt;img v-if=&quot;imageUrl&quot; :src=&quot;imageUrl&quot; class=&quot;avatar&quot; /&gt;</span><br><span class="line">          &lt;i v-else class=&quot;el-icon-plus avatar-uploader-icon&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/el-upload&gt; --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;el-upload</span><br><span class="line">          class=&quot;avatar-uploader&quot;</span><br><span class="line">          action=&quot;http://127.0.0.1:8080/JsonTest/fileUpload&quot;</span><br><span class="line">          :data=&quot;imgdata&quot;</span><br><span class="line">          :on-preview=&quot;handlePictureCardPreview&quot;</span><br><span class="line">          :on-remove=&quot;handleRemove&quot;</span><br><span class="line">          :on-success=&quot;handleSuccess&quot;</span><br><span class="line">          :show-file-list=&quot;false&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;!-- &lt;el-button size=&quot;small&quot; type=&quot;primary&quot;&gt;点击上传&lt;/el-button&gt; --&gt;</span><br><span class="line">          &lt;!-- &lt;i class=&quot;el-icon-plus&quot;&gt;&lt;/i&gt; --&gt;</span><br><span class="line">          &lt;img v-if=&quot;form.img&quot; :src=&quot;form.img&quot; class=&quot;avatar&quot; /&gt;</span><br><span class="line">          &lt;i v-else class=&quot;el-icon-plus avatar-uploader-icon&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/el-upload&gt;</span><br><span class="line">        &lt;!-- &lt;el-dialog :visible.sync=&quot;dialogVisible&quot;&gt;</span><br><span class="line">          &lt;img width=&quot;100%&quot; :src=&quot;imageUrl&quot; alt=&quot;tupian&quot; /&gt;</span><br><span class="line">        &lt;/el-dialog&gt; --&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line"></span><br><span class="line">      &lt;el-form-item label=&quot;个人简介&quot;&gt;</span><br><span class="line">       </span><br><span class="line">        &lt;tinymce-editor</span><br><span class="line">          ref=&quot;editor&quot;</span><br><span class="line">          v-model=&quot;form.content&quot;</span><br><span class="line">          :disabled=&quot;disabled&quot;</span><br><span class="line">        &gt;</span><br><span class="line">        &lt;/tinymce-editor&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">      &lt;el-form-item&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;onSubmit&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button&gt;取消&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-form-item&gt;</span><br><span class="line">    &lt;/el-form&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import TinymceEditor from &#x27;../components/Tiny&#x27;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    TinymceEditor</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      options:[],</span><br><span class="line">      disabled: false,</span><br><span class="line">      id: this.$route.params.id,</span><br><span class="line">      form: &#123;&#125;,</span><br><span class="line">      imageUrl: &#x27;&#x27;,</span><br><span class="line">      dialogVisible: false,</span><br><span class="line">      //上传图片的大小</span><br><span class="line">      imgdata: &#123;</span><br><span class="line">        width: 1280,</span><br><span class="line">        hight: 500</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onSubmit() &#123;</span><br><span class="line">      console.log(&#x27;submit!&#x27;);</span><br><span class="line">      this.saveStuentData();</span><br><span class="line">    &#125;,</span><br><span class="line">    handleSuccess(response, file, fileList) &#123;</span><br><span class="line">      console.log(response);</span><br><span class="line">      this.form.img = &#x27;http://127.0.01:8080&#x27; + response.data.img;</span><br><span class="line"></span><br><span class="line">      //this.imageUrl = response;</span><br><span class="line">      console.log(this.imageUrl);</span><br><span class="line">      console.log(fileList);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleRemove(file, fileList) &#123;</span><br><span class="line">      console.log(file, fileList);</span><br><span class="line">    &#125;,</span><br><span class="line">    handlePictureCardPreview() &#123;</span><br><span class="line">      // this.imageUrl = file.url;</span><br><span class="line">      this.dialogVisible = true;</span><br><span class="line">    &#125;,</span><br><span class="line">    getStuentData(id) &#123;</span><br><span class="line">      this.$http</span><br><span class="line">        .get(&#x27;http://127.0.0.1:8080/JsonTest/findById/&#x27; + id)</span><br><span class="line">        .then(result =&gt; &#123;</span><br><span class="line">          let data = result.data.data.student;</span><br><span class="line">           this.options = result.data.data.studentclass;</span><br><span class="line">          console.log(data);</span><br><span class="line">          this.form = data;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    getStuentClassData() &#123;</span><br><span class="line">      this.$http</span><br><span class="line">        .get(&#x27;http://127.0.0.1:8080/JsonTest/addStudent/&#x27;)</span><br><span class="line">        .then(result =&gt; &#123;</span><br><span class="line">          let data = result.data.data.studentclass;</span><br><span class="line">          this.options = data;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    saveStuentData() &#123;</span><br><span class="line">      this.$http(&#123;</span><br><span class="line">        method: &#x27;post&#x27;,</span><br><span class="line">        url: &#x27;http://127.0.0.1:8080/JsonTest/saveStudent&#x27;,</span><br><span class="line">        data: this.form</span><br><span class="line">      &#125;).then(result =&gt; &#123;</span><br><span class="line">        //let data = result.data.data.ext;</span><br><span class="line">        console.log(result);</span><br><span class="line">        //this.form = data;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    if (this.id) this.getStuentData(this.id);</span><br><span class="line">    else this.getStuentClassData();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.div-from &#123;</span><br><span class="line">  width: 30%;</span><br><span class="line">  margin: auto;</span><br><span class="line">&#125;</span><br><span class="line">.avatar-uploader .el-upload &#123;</span><br><span class="line">  border: 1px dashed #d9d9d9;</span><br><span class="line">  border-radius: 6px;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  position: relative;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line">.avatar-uploader .el-upload:hover &#123;</span><br><span class="line">  border-color: #409eff;</span><br><span class="line">&#125;</span><br><span class="line">.avatar-uploader-icon &#123;</span><br><span class="line">  font-size: 28px;</span><br><span class="line">  color: #8c939d;</span><br><span class="line">  width: 600px;</span><br><span class="line">  height: 178px;</span><br><span class="line">  line-height: 178px !important;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.avatar &#123;</span><br><span class="line">  width: 600px;</span><br><span class="line">  height: 178px;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h3 id="studentlistvue"><a class="markdownIt-Anchor" href="#studentlistvue">#</a> StudentList.vue</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;div&quot;&gt;</span><br><span class="line">    &lt;h1&gt;StudentList&lt;/h1&gt;</span><br><span class="line">    &lt;el-input v-model=&quot;inputSelect&quot; placeholder=&quot;请输入内容&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; plain @click=&quot;handleSelect()&quot;&gt;查询&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; plain @click=&quot;handleAdd()&quot;&gt;添加&lt;/el-button&gt;</span><br><span class="line">    &lt;el-table :data=&quot;tableData&quot; stripe style=&quot;width: 80%;margin: auto;&quot;&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;num&quot; label=&quot;学号&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;img&quot; label=&quot;照片&quot; width=&quot;180&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;scope.row.img&quot; width=&quot;40&quot; height=&quot;40&quot; class=&quot;head_pic&quot; /&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;classname&quot; label=&quot;班级&quot; width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;time&quot; label=&quot;日期&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;status&quot; label=&quot;状态&quot; width=&quot;180&quot;&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button size=&quot;mini&quot; @click=&quot;handleEdit(scope.$index, scope.row)&quot;&gt;</span><br><span class="line">            编辑</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            type=&quot;danger&quot;</span><br><span class="line">            @click=&quot;handleDelete(scope.$index, scope.row)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            删除</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">    &lt;el-pagination</span><br><span class="line">      background</span><br><span class="line">      layout=&quot;prev, pager, next&quot;</span><br><span class="line">      :total=&quot;total&quot;</span><br><span class="line">      :page-size=&quot;size&quot;</span><br><span class="line">      :current-page=&quot;pageNum&quot;</span><br><span class="line">      :page-count=&quot;lastPage&quot;</span><br><span class="line">      @current-change=&quot;currentChange&quot;</span><br><span class="line">      @size-change=&quot;sizeChange&quot;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;/el-pagination&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      total: 0,</span><br><span class="line">      size: 0,</span><br><span class="line">      pageNum: 2,</span><br><span class="line">      tableData: [],</span><br><span class="line">      pageData: &#123;&#125;,</span><br><span class="line">      lastPage: 0,</span><br><span class="line">      inputSelect:&#x27;&#x27;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleSelect()&#123;</span><br><span class="line">      this.selectData(this.inputSelect,1)</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    handleEdit(index, row) &#123;</span><br><span class="line">      console.log(index, row);</span><br><span class="line">      console.log(row.id);</span><br><span class="line">      const id = row.id;</span><br><span class="line">      this.$router.push(&#123; name: &#x27;Student&#x27;, params: &#123; id &#125; &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleAdd()&#123;</span><br><span class="line">      this.$router.push(&#123; name: &#x27;AddStudent&#x27;&#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleDelete(index, row) &#123;</span><br><span class="line">      console.log(index, row);</span><br><span class="line">      this.delData(row.id);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    delData(id) &#123;</span><br><span class="line">      this.$http</span><br><span class="line">        .delete(&#x27;http://127.0.0.1:8080/JsonTest/delStudent/&#x27; + id)</span><br><span class="line">        .then(result =&gt; &#123;</span><br><span class="line">          console.log(result);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    getData(pageNum) &#123;</span><br><span class="line">      this.$http</span><br><span class="line">        .get(&#x27;http://127.0.0.1:8080/JsonTest/findAll?pageNum=&#x27; + pageNum)</span><br><span class="line">        .then(result =&gt; &#123;</span><br><span class="line">          let data = result.data.data.ext;</span><br><span class="line">          this.tableData = data.list;</span><br><span class="line">          this.total = data.total;</span><br><span class="line">          this.size = data.pageSize;</span><br><span class="line">          this.pageNum = data.pageNum;</span><br><span class="line">          this.lastPage = data.lastPage;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    selectData(name,pageNum) &#123;</span><br><span class="line">      this.$http</span><br><span class="line">        .get(&#x27;http://127.0.0.1:8080/JsonTest/findByName?name=&#x27; + name +&#x27;&amp;pageNum=&#x27; + pageNum)</span><br><span class="line">        .then(result =&gt; &#123;</span><br><span class="line">          let data = result.data.data.ext;</span><br><span class="line">          console.log(data);</span><br><span class="line">          this.tableData = data.list;</span><br><span class="line">          this.total = data.total;</span><br><span class="line">          this.size = data.pageSize;</span><br><span class="line">          this.pageNum = data.pageNum;</span><br><span class="line">          this.lastPage = data.lastPage;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    // prevClick(data) &#123;</span><br><span class="line">    //   this.getData(data);</span><br><span class="line">    // &#125;,</span><br><span class="line">    // nextClick(data) &#123;</span><br><span class="line">    //   this.getData(data);</span><br><span class="line">    // &#125;,</span><br><span class="line">    currentChange(val) &#123;</span><br><span class="line">      if(this.inputSelect != &#x27;&#x27;)&#123;</span><br><span class="line">        this.selectData(this.inputSelect,val)</span><br><span class="line">      &#125;else</span><br><span class="line">      this.getData(val);</span><br><span class="line">    &#125;,</span><br><span class="line">    sizeChange(val) &#123;</span><br><span class="line">      console.log(val);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.getData(1);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.div-from &#123;</span><br><span class="line">  width: 80%;</span><br><span class="line">  margin: auto;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h2 id="5-在router文件夹中注册组件"><a class="markdownIt-Anchor" href="#5-在router文件夹中注册组件">#</a> 5、在 router 文件夹中，注册组件</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import Vue from &quot;vue&quot;;</span><br><span class="line">import VueRouter from &quot;vue-router&quot;;</span><br><span class="line">import Login from &quot;../views/Login.vue&quot;;</span><br><span class="line">import StudentList from &quot;../views/StudentList.vue&quot;;</span><br><span class="line">import Student from &quot;../views/Student.vue&quot;;</span><br><span class="line">import Tiny from &quot;../components/Tiny.vue&quot;;</span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter);</span><br><span class="line"></span><br><span class="line">const routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/&quot;,</span><br><span class="line">    name: &quot;Login&quot;,</span><br><span class="line">    component: Login</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/list&quot;,</span><br><span class="line">    name: &quot;StudentList&quot;,</span><br><span class="line">    component: StudentList</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/student/:id&quot;,</span><br><span class="line">    name: &quot;Student&quot;,</span><br><span class="line">    component: Student</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/addstudent&quot;,</span><br><span class="line">    name: &quot;AddStudent&quot;,</span><br><span class="line">    component: Student</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: &quot;/tiny&quot;,</span><br><span class="line">    name: &quot;Tiny&quot;,</span><br><span class="line">    component: Tiny</span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">const router = new VueRouter(&#123;</span><br><span class="line">  routes</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">export default router;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="二-相关功能"><a class="markdownIt-Anchor" href="#二-相关功能">#</a> 二、相关功能</h1>
<h2 id="1-在components文件夹中建tinyvue组件"><a class="markdownIt-Anchor" href="#1-在components文件夹中建tinyvue组件">#</a> 1、在 components 文件夹中建 Tiny.vue 组件</h2>
<ul>
<li><mark>将 node_modules 文件夹中的 tinymce 文件夹中的 langs 文件夹和 skins 文件夹复制到 public 文件夹</mark></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;editor id=&quot;tinymce&quot; v-model=&quot;myValue&quot; :init=&quot;init&quot; :disabled=&quot;disabled&quot;&gt;&lt;/editor&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import tinymce from &#x27;tinymce/tinymce&#x27;;</span><br><span class="line">import &#x27;tinymce/themes/silver&#x27;;</span><br><span class="line">import Editor from &#x27;@tinymce/tinymce-vue&#x27;;</span><br><span class="line">// 更多插件参考：https://www.tiny.cloud/docs/plugins/</span><br><span class="line">import &#x27;tinymce/plugins/image&#x27;; // 插入上传图片插件</span><br><span class="line">import &#x27;tinymce/plugins/media&#x27;; // 插入视频插件</span><br><span class="line">import &#x27;tinymce/plugins/table&#x27;; // 插入表格插件</span><br><span class="line">import &#x27;tinymce/plugins/lists&#x27;; // 列表插件</span><br><span class="line">import &#x27;tinymce/plugins/wordcount&#x27;; // 字数统计插件</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    Editor</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    value: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 基本路径，默认为空根目录，如果你的项目发布后的地址为目录形式，</span><br><span class="line">    // 即abc.com/tinymce，baseUrl需要配置成tinymce，不然发布后资源会找不到</span><br><span class="line">    baseUrl: &#123;</span><br><span class="line">      type: String,</span><br><span class="line">      default: &#x27;&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    disabled: &#123;</span><br><span class="line">      type: Boolean,</span><br><span class="line">      default: false</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: &#123;</span><br><span class="line">      type: [String, Array],</span><br><span class="line">      default: &#x27;lists image media table wordcount&#x27;</span><br><span class="line">    &#125;,</span><br><span class="line">    toolbar: &#123;</span><br><span class="line">      // type: [String, Array],</span><br><span class="line">      // default:</span><br><span class="line">      type: Array,</span><br><span class="line">      required: false,</span><br><span class="line">      default()&#123;</span><br><span class="line">      return [&#x27;undo redo |  formatselect | fontselect | fontsizeselect | bold italic forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | lists image media table | removeformat&#x27;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      init: &#123;</span><br><span class="line">        language_url: &#x27;/tinymce/langs/zh_CN.js&#x27;, // 语言包的路径</span><br><span class="line">        language: &#x27;zh_CN&#x27;, //语言</span><br><span class="line">        skin_url: &#x27;/tinymce/skins/ui/oxide&#x27;,</span><br><span class="line">        content_css: &#x27;/tinymce/skins/content/default/content.css&#x27;,</span><br><span class="line">        height: 300, //编辑器高度</span><br><span class="line">        width:800,</span><br><span class="line">        branding: false, //是否禁用“Powered by TinyMCE”</span><br><span class="line">        menubar: true, //顶部菜单栏显示</span><br><span class="line">        plugins: this.plugins,</span><br><span class="line">        font_formats: `</span><br><span class="line">            微软雅黑=微软雅黑;</span><br><span class="line">            宋体=宋体;</span><br><span class="line">            黑体=黑体;</span><br><span class="line">            仿宋=仿宋;</span><br><span class="line">            楷体=楷体;</span><br><span class="line">            隶书=隶书;</span><br><span class="line">            幼圆=幼圆;`,</span><br><span class="line"></span><br><span class="line">        toolbar: this.toolbar,</span><br><span class="line">          images_upload_handler: (blobInfo, success) =&gt; &#123;</span><br><span class="line">          const img = &#x27;data:image/jpeg;base64,&#x27; + blobInfo.base64()</span><br><span class="line">          success(img)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      myValue: this.value</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    tinymce.init(&#123;&#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line">    value (newValue) &#123;</span><br><span class="line">      this.myValue = newValue</span><br><span class="line">    &#125;,</span><br><span class="line">    myValue (newValue) &#123;</span><br><span class="line">      this.$emit(&#x27;input&#x27;, newValue)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<h2 id="2-html转pdf"><a class="markdownIt-Anchor" href="#2-html转pdf">#</a> 2、html 转 pdf</h2>
<h3 id="1安装插件"><a class="markdownIt-Anchor" href="#1安装插件">#</a> （1）安装插件</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一个.将页面html转换成图片</span><br><span class="line">npm install --save html2canvas </span><br><span class="line">第二个.将图片生成pdf</span><br><span class="line">npm install jspdf --save</span><br></pre></td></tr></table></figure>
<h3 id="2定义全局函数在uilts文件夹下新建htmltopdfjs"><a class="markdownIt-Anchor" href="#2定义全局函数在uilts文件夹下新建htmltopdfjs">#</a> （2）定义全局函数 (在 uilts 文件夹下新建 htmlToPdf.js)</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> html2Canvas <span class="keyword">from</span> <span class="string">&#x27;html2canvas&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">JsPDF</span> <span class="keyword">from</span> <span class="string">&#x27;jspdf&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">  install (<span class="title class_">Vue</span>) &#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">getPdf</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> title = <span class="variable language_">this</span>.<span class="property">htmlTitle</span></span><br><span class="line">      <span class="title function_">html2Canvas</span>(<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#pdfDom&#x27;</span>), &#123;</span><br><span class="line">        <span class="attr">allowTaint</span>: <span class="literal">true</span></span><br><span class="line">      &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">canvas</span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> contentWidth = canvas.<span class="property">width</span></span><br><span class="line">        <span class="keyword">let</span> contentHeight = canvas.<span class="property">height</span></span><br><span class="line">        <span class="keyword">let</span> pageHeight = contentWidth / <span class="number">592.28</span> * <span class="number">841.89</span></span><br><span class="line">        <span class="keyword">let</span> leftHeight = contentHeight</span><br><span class="line">        <span class="keyword">let</span> position = <span class="number">0</span></span><br><span class="line">        <span class="keyword">let</span> imgWidth = <span class="number">595.28</span></span><br><span class="line">        <span class="keyword">let</span> imgHeight = <span class="number">592.28</span> / contentWidth * contentHeight</span><br><span class="line">        <span class="keyword">let</span> pageData = canvas.<span class="title function_">toDataURL</span>(<span class="string">&#x27;image/jpeg&#x27;</span>, <span class="number">1.0</span>)</span><br><span class="line">        <span class="keyword">let</span> <span class="variable constant_">PDF</span> = <span class="keyword">new</span> <span class="title class_">JsPDF</span>(<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;pt&#x27;</span>, <span class="string">&#x27;a4&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> (leftHeight &lt; pageHeight) &#123;</span><br><span class="line">          <span class="variable constant_">PDF</span>.<span class="title function_">addImage</span>(pageData, <span class="string">&#x27;JPEG&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>, imgWidth, imgHeight)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">while</span> (leftHeight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable constant_">PDF</span>.<span class="title function_">addImage</span>(pageData, <span class="string">&#x27;JPEG&#x27;</span>, <span class="number">0</span>, position, imgWidth, imgHeight)</span><br><span class="line">            leftHeight -= pageHeight</span><br><span class="line">            position -= <span class="number">841.89</span></span><br><span class="line">            <span class="keyword">if</span> (leftHeight &gt; <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="variable constant_">PDF</span>.<span class="title function_">addPage</span>()</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable constant_">PDF</span>.<span class="title function_">save</span>(title + <span class="string">&#x27;.pdf&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      )</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3在mainjs中使用"><a class="markdownIt-Anchor" href="#3在mainjs中使用">#</a> （3）在 main.js 中使用</h3>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> htmlToPdf <span class="keyword">from</span> <span class="string">&#x27;@/utils/htmlToPdf&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(htmlToPdf)</span><br></pre></td></tr></table></figure>
<h3 id="4使用"><a class="markdownIt-Anchor" href="#4使用">#</a> （4）使用</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div class=&quot;row&quot; id=&quot;pdfDom&quot; style=&quot;padding-top: 55px;background-color:#fff;&quot;&gt;</span><br><span class="line">    //给自己需要导出的ui部分.定义id为&quot;pdfDom&quot;.此部分将就是pdf显示的部分</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot;v-on:click=&quot;getPdf()&quot;&gt;导出PDF&lt;/button&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">      htmlTitle: &#x27;页面导出PDF文件名&#x27;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>vue依赖</title>
    <url>/2022/11/22/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/vue%E4%BE%9D%E8%B5%96/</url>
    <content><![CDATA[<h1 id="vue依赖"><a class="markdownIt-Anchor" href="#vue依赖">#</a> vue 依赖</h1>
<h2 id="packagejson"><a class="markdownIt-Anchor" href="#packagejson">#</a> package.json</h2>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;myeb&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A Vue.js project&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;北沐xxx &lt;2603361579@qq.com&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;private&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack-dev-server  --progress --config build/webpack.dev.conf.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;npm run dev&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node build/build.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;axios&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.19.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;element-ui&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.12.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mock.js&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;qs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.10.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-router&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-loader-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vuex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.1.1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;devDependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;autoprefixer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.4.7&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/core&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.16.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-helper-vue-jsx-merge-props&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^8.2.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/plugin-syntax-dynamic-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/plugin-transform-runtime&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.16.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-plugin-transform-vue-jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.7.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;@babel/preset-env&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.16.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-plugin-syntax-jsx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.18.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-plugin-component&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;babel-preset-stage-2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.22.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;bindings&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.5.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;chalk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;copy-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;css-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;extract-text-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;friendly-errors-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.6.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;html-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mockjs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;node-notifier&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.0.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;optimize-css-assets-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ora&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;portfinder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.0.13&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss-import&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^14.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^7.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;postcss-url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^10.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rimraf&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;semver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;shelljs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^0.8.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;uglifyjs-webpack-plugin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^1.1.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;url-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^15.7.1&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-style-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.1.3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;vue-template-compiler&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^2.6.10&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;file-loader&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^6.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.41.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-bundle-analyzer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.7.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-cli&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.3.9&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-dev-server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^3.8.2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;webpack-merge&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.2.2&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;engines&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;node&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;= 6.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;npm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&gt;= 3.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;browserslist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;&gt; 1%&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;last 2 versions&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;not ie &lt;= 8&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="npm-install-出现问题"><a class="markdownIt-Anchor" href="#npm-install-出现问题">#</a> npm install 出现问题</h2>
<h3 id="问题"><a class="markdownIt-Anchor" href="#问题">#</a> <strong>问题</strong></h3>
<p><img data-src="https://img-blog.csdnimg.cn/f5dea357fbd94127af634d044ecfa5f2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBALVdhY2st,size_20,color_FFFFFF,t_70,g_se,x_16" alt="img"></p>
<h3 id="解决"><a class="markdownIt-Anchor" href="#解决">#</a> 解决</h3>
<p>尝试输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --force</span><br></pre></td></tr></table></figure>
<p>没有报 npm ERR! 也可以运行</p>
<p>因此如有以上相同的报错内容可以尝试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --force</span><br></pre></td></tr></table></figure>
<p><strong>或者</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --legacy-peer-deps</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>Vue</tag>
        <tag>依赖</tag>
      </tags>
  </entry>
  <entry>
    <title>安装uview报错</title>
    <url>/2022/11/22/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/%E5%AE%89%E8%A3%85uview%E6%8A%A5%E9%94%99/</url>
    <content><![CDATA[<h1 id="安装uview报错"><a class="markdownIt-Anchor" href="#安装uview报错">#</a> 安装 uview 报错</h1>
<h4 id="mainjs添加"><a class="markdownIt-Anchor" href="#mainjs添加">#</a> main.js 添加</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// main.js</span><br><span class="line">import uView from &#x27;@/uni_modules/uview-ui&#x27;</span><br><span class="line">Vue.use(uView)</span><br></pre></td></tr></table></figure>
<p><strong>效果下图所示</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import App from &#x27;./App&#x27;</span><br><span class="line"></span><br><span class="line">// #ifndef VUE3</span><br><span class="line">import Vue from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">// main.js</span><br><span class="line">import uView from &#x27;@/uni_modules/uview-ui&#x27;</span><br><span class="line">Vue.use(uView)</span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = false</span><br><span class="line">App.mpType = &#x27;app&#x27;</span><br><span class="line">const app = new Vue(&#123;</span><br><span class="line">    ...App</span><br><span class="line">&#125;)</span><br><span class="line">app.$mount()</span><br><span class="line">// #endif</span><br><span class="line"></span><br><span class="line">// #ifdef VUE3</span><br><span class="line">import &#123; createSSRApp &#125; from &#x27;vue&#x27;</span><br><span class="line">export function createApp() &#123;</span><br><span class="line">  const app = createSSRApp(App)</span><br><span class="line">  return &#123;</span><br><span class="line">    app</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">// #endif</span><br></pre></td></tr></table></figure>
<h4 id="uniscss添加"><a class="markdownIt-Anchor" href="#uniscss添加">#</a> uni.scss 添加</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/* uni.scss */</span><br><span class="line">@import &#x27;@/uni_modules/uview-ui/theme.scss&#x27;;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前端</category>
        <category>Vue</category>
        <category>UI框架</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>Vue</tag>
        <tag>uview</tag>
        <tag>UI框架</tag>
      </tags>
  </entry>
  <entry>
    <title>前后端分离-jar包的使用</title>
    <url>/2022/11/25/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB-jar%E5%8C%85%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="uniapp前后端分离"><a class="markdownIt-Anchor" href="#uniapp前后端分离">#</a> uniapp 前后端分离</h2>
<h3 id="前端"><a class="markdownIt-Anchor" href="#前端">#</a> 前端</h3>
<h5 id="运行前端程序"><a class="markdownIt-Anchor" href="#运行前端程序">#</a> 运行前端程序</h5>
<h3 id="后端"><a class="markdownIt-Anchor" href="#后端">#</a> 后端</h3>
<ul>
<li>
<h5 id="打开redis"><a class="markdownIt-Anchor" href="#打开redis">#</a> 打开 redis</h5>
</li>
</ul>
<p>路径：D:\2.develop tool\Java\Redis-x64-5.0.14.1\Redis-x64-5.0.14.1</p>
<ul>
<li>
<h5 id="jar包连接后端"><a class="markdownIt-Anchor" href="#jar包连接后端">#</a> jar 包–连接后端</h5>
</li>
</ul>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">//cmd 运行代码</span></span><br><span class="line"><span class="comment">//正常运行时，在对应文件夹打开cmd</span></span><br><span class="line">java -jar jar包名称</span><br><span class="line"><span class="comment">//eg. java -jar perfect-campus-0.0.1-SNAPSHOT.jar</span></span><br><span class="line"></span><br><span class="line">注意：<span class="comment">// jdk运行错误时，jar包保存至JDK/bin目录下该路径</span></span><br><span class="line">D<span class="punctuation">:</span>\<span class="number">2.</span>develop tool\Java\JDK1<span class="number">.8</span>\bin</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>前后端交互</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>WEB</tag>
        <tag>Jar</tag>
      </tags>
  </entry>
  <entry>
    <title>JDK全局环境配置问题</title>
    <url>/2022/10/28/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/JDK%E5%85%A8%E5%B1%80%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="jdk全局环境配置问题"><a class="markdownIt-Anchor" href="#jdk全局环境配置问题">#</a> JDK 全局环境配置问题</h2>
<h4 id="windows10系统修改jdk版本后配置环境变量不生效"><a class="markdownIt-Anchor" href="#windows10系统修改jdk版本后配置环境变量不生效">#</a> windows10 系统修改 JDK 版本后配置环境变量不生效</h4>
<p>之前安装了个 jdk8 版本，今天突然想安装个更新版本的 jdk11 来用，但在安装好 JDK11 并配置环境变量后发现修改 JDK 版本后配置的环境变量不生效的。</p>
<p>以前安装过安装版的 jdk 后，配置过环境变量，然后现在更换 jdk 版本且修改环境变量并不能生效，如原本安装了 1.8，现更换为 1.7（或其他版本），且配置了环境变量，但是 java -version 仍显示 1.8（任然显示原来的版本）。</p>
<h4 id="原因"><a class="markdownIt-Anchor" href="#原因">#</a> 原因</h4>
<p>当使用安装版本的 JDK 程序时（一般是 1.7 版本以上），在安装结束后安装程序会自动将 java.exe、javaw.exe、javaws.exe 三个可执行文件复制到<strong> C:\Windows\System32 目录，这个目录在 WINDOWS 环境变量中的优先级高于 JAVA_HOME 设置的环境变量优先级，故此直接更改 JAVA_HOME 会无效。</strong></p>
<p>另外，JDK1.8 安装版本，还会在 C:\ProgramData\Oracle\Java 目录中生成一些配置文件，并同时将此目录写到环境变量中的 Path 中。</p>
<h4 id="解决"><a class="markdownIt-Anchor" href="#解决">#</a> 解决</h4>
<p>删除 C:\Windows\System32 目录下的 java.exe、javaw.exe、javaws.exe 三个文件（如果没有就不用删）</p>
<h5 id="下面奏效"><a class="markdownIt-Anchor" href="#下面奏效">#</a> 下面奏效</h5>
<p><strong>删除环境变量 Path 中 C:\ProgramData\Oracle\Java\javapath 的配置</strong></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>后端</category>
        <category>JDK</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>JAVA</tag>
        <tag>JDK</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis启动闪退</title>
    <url>/2022/10/25/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/Redis%E5%90%AF%E5%8A%A8%E9%97%AA%E9%80%80/</url>
    <content><![CDATA[<h2 id="redis启动时闪退"><a class="markdownIt-Anchor" href="#redis启动时闪退">#</a> redis 启动时闪退</h2>
<h4 id="遇到的解决方法"><a class="markdownIt-Anchor" href="#遇到的解决方法">#</a> 遇到的解决方法：</h4>
<h5 id="任务管理器-服务-停止redis服务进程"><a class="markdownIt-Anchor" href="#任务管理器-服务-停止redis服务进程">#</a> 任务管理器 -&gt; 服务 -&gt; 停止 redis 服务进程</h5>
<h4 id="任务管理器-打开服务-将reisd关闭-然后启动redis相应程序"><a class="markdownIt-Anchor" href="#任务管理器-打开服务-将reisd关闭-然后启动redis相应程序">#</a> 任务管理器 -&gt; 打开服务 -&gt; 将 reisd 关闭 - &gt; 然后启动 redis 相应程序</h4>
<p><strong>1.Windows+r 进入 cmd，</strong><br>
<strong>2.cd 进入到 redis-server.exe 所在文件夹下，</strong><br>
<strong>3. 写入 redis-server.exe redis.windows.conf ，回车</strong><img data-src="https://www.likecs.com/default/index/img?u=aHR0cHM6Ly9waWFuc2hlbi5jb20vaW1hZ2VzLzc2MS8xYTE0YjNjMzUxZDAxZTcyOTZmNzkwY2JhNGY2ZmNiMS5wbmc=" alt="redis启动时闪退，史上最详细的解决办法，看完还解决不了来找我"><br>
<strong> 4. 如出现如图所示错误，打开 redis.windows.conf，有一行 bind 127.0.0.1 ，前面不要有</strong></p>
<p><strong>#</strong><img data-src="https://www.likecs.com/default/index/img?u=aHR0cHM6Ly9waWFuc2hlbi5jb20vaW1hZ2VzLzQ5NC82ZjljMGM2MThiOWVmNDdjZmVlYzYzOGNhN2JkZDIyNi5wbmc=" alt="redis启动时闪退，史上最详细的解决办法，看完还解决不了来找我"></p>
<p><strong>5. 保存后退出，再来 redis-server.exe redis.windows.conf，如果还报错，按下图输入</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//先输入密码</span><br><span class="line">127.0.0.1:6379&gt;auth &quot;123456&quot;</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>
<p><strong>6. 再如图下输入</strong></p>
<p><img data-src="https://www.likecs.com/default/index/img?u=aHR0cHM6Ly9waWFuc2hlbi5jb20vaW1hZ2VzLzY0MS82MzllMGE0ZTczNTBmMzJiYWQxMjZhM2YzMDcwYjczOS5KUEVH" alt="redis启动时闪退，史上最详细的解决办法，看完还解决不了来找我"></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>后端</category>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>JAVA</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot</title>
    <url>/2022/10/25/blog/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/%E5%90%8E%E7%AB%AF/Springboot/</url>
    <content><![CDATA[<h1 id="srpingboot"><a class="markdownIt-Anchor" href="#srpingboot">#</a> srpingboot</h1>
<h1 id="一-搭建环境"><a class="markdownIt-Anchor" href="#一-搭建环境">#</a> 一、搭建环境</h1>
<h2 id="1-使用工具"><a class="markdownIt-Anchor" href="#1-使用工具">#</a> 1、使用工具：</h2>
<ul>
<li>IDEA  2017.3.1</li>
<li>Springboot 2.25</li>
<li>mysql (数据库)</li>
<li>Tomcat 9.0.31 (springboot2.25 支持 tomcat8.5 以上)</li>
</ul>
<h2 id="2-新建项目"><a class="markdownIt-Anchor" href="#2-新建项目">#</a> 2、新建项目</h2>
<h3 id="1使用idea的spring新建向导"><a class="markdownIt-Anchor" href="#1使用idea的spring新建向导">#</a> （1）使用 IDEA 的 spring 新建向导</h3>
<ul>
<li>选择 packing 为 war</li>
<li>Type 为 Maven Project</li>
<li>选择 Spring Web、JDBC API、MyBatis Framework、MySQL Driver</li>
</ul>
<h3 id="2配置pom文件"><a class="markdownIt-Anchor" href="#2配置pom文件">#</a> （2）配置 pom 文件</h3>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">   <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.5.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.lixp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--更改mysql数据库驱动版本（默认为8.0以上）--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.44<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--JDBC API 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--Spring Web 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--MyBatis Framework 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- MySQL Driver 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Tomcat 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--test 自动生成--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">&lt;!-- json插件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.datatype<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-datatype-joda<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.module<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-module-parameter-names<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 分页插件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- alibaba的druid数据库连接池 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 图片压缩 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.coobird<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thumbnailator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.62<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--配置逆向工程 --&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--需要在resources文件夹中新建mybatis-generatorconfig.xml文件，用于配置逆向工程 --&gt;</span> </span><br><span class="line">                   <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">                       $&#123;basedir&#125;/src/main/resources/mybatis-generatorconfig.xml</span><br><span class="line">                   <span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.44<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3配置tomcat"><a class="markdownIt-Anchor" href="#3配置tomcat">#</a> （3）配置 Tomcat</h3>
<p><img data-src="%5Cimages%5C360%E6%88%AA%E5%9B%BE17571114416460.png" alt=""></p>
<p><img data-src="%5Cimages%5C360%E6%88%AA%E5%9B%BE17001016223129.png" alt=""></p>
<h3 id="4配置webxml"><a class="markdownIt-Anchor" href="#4配置webxml">#</a> （4）配置 web.xml</h3>
<p><img data-src="%5Cimages%5C360%E6%88%AA%E5%9B%BE16530713375059.png" alt=""></p>
<h3 id="5新建package"><a class="markdownIt-Anchor" href="#5新建package">#</a> （5）新建 package</h3>
<ul>
<li>bean</li>
<li>config</li>
<li>controller</li>
<li>dao</li>
<li>service</li>
<li>在 resources 目录下新建 mapper 目录</li>
</ul>
<h3 id="6配置mybatis-generatorconfigxml"><a class="markdownIt-Anchor" href="#6配置mybatis-generatorconfigxml">#</a> （6）配置 mybatis-generatorconfig.xml</h3>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- targetRuntime=&quot;MyBatis3Simple&quot;:生成简单版的CRUD MyBatis3:豪华版 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;DB2Tables&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生成文件时不生成注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- jdbcConnection：指定如何连接到目标数据库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span></span></span><br><span class="line"><span class="tag">                <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/test?allowMultiQueries=true&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">password</span>=<span class="string">&quot;root@123456&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Java类型解析器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;forceBigDecimals&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaModelGenerator：指定javaBean的生成策略 targetPackage=&quot;test.model&quot;：目标包名</span></span><br><span class="line"><span class="comment">            targetProject=&quot;\MBGTestProject\src&quot;：目标工程 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetPackage</span>=<span class="string">&quot;com.lixp.demo.bean&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;trimStrings&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- sqlMapGenerator：sql映射生成策略： --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">&quot;mapper&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\resources&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- javaClientGenerator:指定mapper接口所在的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.lixp.demo.dao&quot;</span> <span class="attr">targetProject</span>=<span class="string">&quot;.\src\main\java&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;enableSubPackages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定要逆向分析哪些表：根据表要创建javaBean --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;student_spring&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Student&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;admin&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Admin&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="7配置配置文件applicationyml"><a class="markdownIt-Anchor" href="#7配置配置文件applicationyml">#</a> （7）配置配置文件（application.yml）</h3>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># druid数据源的配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test?useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root@123456</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">filters:</span> <span class="string">stat</span></span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line">    <span class="attr">initialSize:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">select</span> <span class="string">&#x27;x&#x27;</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">maxOpenPreparedStatements:</span> <span class="number">20</span></span><br><span class="line"><span class="comment"># mybatis 的配置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span>  <span class="comment">#注意：一定要对应mapper映射xml文件的所在路径</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.lixp.demo.bean</span>  <span class="comment"># 注意：对应实体类的路径</span></span><br><span class="line"><span class="comment"># 分页插件的配置</span></span><br><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line">    <span class="attr">helperDialect:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">reasonable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">supportMethodsArguments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure>
<h3 id="8配置druid的监控"><a class="markdownIt-Anchor" href="#8配置druid的监控">#</a> （8）配置 Druid 的监控</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DruidConfig</span> &#123;</span><br><span class="line">    <span class="meta">@ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">druid</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置Druid的监控</span></span><br><span class="line">    <span class="comment">//1、配置一个管理后台的Servlet</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServletRegistrationBean <span class="title function_">statViewServlet</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ServletRegistrationBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletRegistrationBean</span>(<span class="keyword">new</span> <span class="title class_">StatViewServlet</span>(), <span class="string">&quot;/druid/*&quot;</span>);</span><br><span class="line">        Map&lt;String,String&gt; initParams = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        initParams.put(<span class="string">&quot;loginUsername&quot;</span>,<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;loginPassword&quot;</span>,<span class="string">&quot;root@123456&quot;</span>);</span><br><span class="line">        initParams.put(<span class="string">&quot;allow&quot;</span>,<span class="string">&quot;&quot;</span>);<span class="comment">//默认就是允许所有访问</span></span><br><span class="line">        initParams.put(<span class="string">&quot;deny&quot;</span>,<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        <span class="keyword">return</span> bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2、配置一个web监控的filter</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> FilterRegistrationBean <span class="title function_">webStatFilter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">FilterRegistrationBean</span> <span class="variable">bean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FilterRegistrationBean</span>();</span><br><span class="line">        bean.setFilter(<span class="keyword">new</span> <span class="title class_">WebStatFilter</span>());</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; initParams = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        initParams.put(<span class="string">&quot;exclusions&quot;</span>,<span class="string">&quot;*.js,*.css,/druid/*&quot;</span>);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">        bean.setUrlPatterns(Arrays.asList(<span class="string">&quot;/*&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="9添加注解mapperscan用于扫描mapper"><a class="markdownIt-Anchor" href="#9添加注解mapperscan用于扫描mapper">#</a> （9）添加注解（@MapperScan）用于扫描 Mapper</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@MapperScan(value = &quot;com.lixp.demo.dao&quot;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">      SpringApplication.run(DemoApplication.class, args);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="10-生成逆向工程"><a class="markdownIt-Anchor" href="#10-生成逆向工程">#</a> （10） 生成逆向工程</h3>
<p><img data-src="images%5C360%E6%88%AA%E5%9B%BE17860601355264.png" alt=""></p>
<h3 id="运行成功后会在bean-dao-mapper目录下生成对应的文件"><a class="markdownIt-Anchor" href="#运行成功后会在bean-dao-mapper目录下生成对应的文件">#</a> <mark>运行成功后会在：bean、dao、mapper 目录下生成对应的文件</mark></h3>
<h3 id="11在controller包下创建controller进行测试"><a class="markdownIt-Anchor" href="#11在controller包下创建controller进行测试">#</a> （11）在 Controller 包下创建 controller 进行测试</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AdminController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AdminMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(AdminController.class);</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Admin <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        logger.info(mapper.toString());</span><br><span class="line">        <span class="type">Admin</span> <span class="variable">admin</span> <span class="operator">=</span> mapper.selectByPrimaryKey(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> admin;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="二-crud操作"><a class="markdownIt-Anchor" href="#二-crud操作">#</a> 二、Crud 操作</h1>
<h2 id="1-编写返回信息类"><a class="markdownIt-Anchor" href="#1-编写返回信息类">#</a> 1、编写返回信息类</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//设置返回信息对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Msg</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> code; <span class="comment">//设置返回码</span></span><br><span class="line">    <span class="keyword">private</span> String message; <span class="comment">//设置返回的文本消息</span></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,Object&gt; data; <span class="comment">//附加数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//成功的话返回码为20000</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Msg <span class="title function_">success</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Msg</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Msg</span>();</span><br><span class="line">        result.setCode(<span class="number">20000</span>);</span><br><span class="line">        result.setMessage(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//失败的话返回码为10000</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Msg <span class="title function_">fail</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">Msg</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Msg</span>();</span><br><span class="line">        result.setCode(<span class="number">10000</span>);</span><br><span class="line">        result.setMessage(<span class="string">&quot;err&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加返回数据</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">add</span><span class="params">(String key,Object object)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.getData().put(key,object);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">setCode</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMessage</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">setMessage</span><span class="params">(String message)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.message = message;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">setData</span><span class="params">(Map&lt;String, Object&gt; data)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.data = data;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="特别说明json数据传递"><a class="markdownIt-Anchor" href="#特别说明json数据传递">#</a> 特别说明 ——json 数据传递</h2>
<h3 id="1date数据类型的设置"><a class="markdownIt-Anchor" href="#1date数据类型的设置">#</a> （1）Date 数据类型的设置</h3>
<ul>
<li>在数据传递过程中，Json 中的 Date 不能被自动识别，因为 json 中的日期为 string 类型，而 bean 中的日期为 Date 类型，因此必须进行转换，转换方法在 bean 中进行设置 (加注解)</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//要接收日期格式的json数据</span></span><br><span class="line"><span class="meta">@DateTimeFormat(pattern=&quot;yyyy-MM-dd&quot;)</span></span><br><span class="line"><span class="meta">@JsonFormat(locale=&quot;zh&quot;, timezone=&quot;GMT+8&quot;, pattern=&quot;yyyy-MM-dd&quot;)</span></span><br><span class="line"><span class="keyword">private</span> Date time;</span><br></pre></td></tr></table></figure>
<h3 id="2数据的发送与接收"><a class="markdownIt-Anchor" href="#2数据的发送与接收">#</a> （2）数据的发送与接收</h3>
<h4 id="json数据的请求头有两种"><a class="markdownIt-Anchor" href="#json数据的请求头有两种">#</a> json 数据的请求头有两种</h4>
<ul>
<li><mark>Content-type:  application/x-www-form-urlencoded 为表单数据</mark></li>
<li><mark>Content-Type：application/json;charset=utf-8 为普通的 json 数据</mark></li>
<li>在接收请求的时候要注意看这两种数据</li>
</ul>
<h4 id="1applicationx-www-form-urlencoded"><a class="markdownIt-Anchor" href="#1applicationx-www-form-urlencoded">#</a> 1）application/x-www-form-urlencoded</h4>
<p>这种方式是以表单方式进行数据发送</p>
<p>发送方：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1:8080/JsonTest/saveStudent&#x27;</span>,</span><br><span class="line">  <span class="attr">headers</span>: &#123;<span class="string">&#x27;Content-type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;,</span><br><span class="line">  params :  <span class="variable language_">this</span>.<span class="property">form</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>接收方：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/saveStudent&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Msg <span class="title function_">addStudent</span><span class="params">( Student student)</span>  &#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(student);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> studentService.saveStudent(student);</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> Msg.success();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">return</span> Msg.fail();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2applicationjsoncharsetutf-8"><a class="markdownIt-Anchor" href="#2applicationjsoncharsetutf-8">#</a> 2）application/json;charset=utf-8</h4>
<ul>
<li>axio 方式默认发送该请求头，该请求头一般用 @RequestBody 注解接收分为两种情况</li>
<li>方式一:</li>
</ul>
<p>发送方可发送多个对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">this</span>.$http(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;post&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1:8080/JsonTest/saveStudent&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">      <span class="attr">student</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">form</span>)</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
<p>该方式可以发送多个 object</p>
<p>接收方，要使用阿里的 fastjson 进行解析，因为在发送的时候是以字符串的形式发送的：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/saveStudent&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Msg <span class="title function_">addStudent</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String,Object&gt; map)</span>  &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> JSON.parseObject(map.get(<span class="string">&quot;student&quot;</span>).toString(),Student.class);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> studentService.saveStudent(student);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.success();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">return</span> Msg.fail();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>方式二</li>
</ul>
<p>发送方：默认只发送一个对象</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">this.$http(&#123;</span><br><span class="line">       method: &#x27;post&#x27;,</span><br><span class="line">       url: &#x27;http://127.0.0.1:8080/JsonTest/saveStudent&#x27;,</span><br><span class="line">       data: this.form</span><br><span class="line">     &#125;)</span><br></pre></td></tr></table></figure>
<p>接收方，可以自动封装，前提是对象中的属性和 bean 中一致：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/saveStudent&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Msg <span class="title function_">addStudent</span><span class="params">(<span class="meta">@RequestBody</span> Student student)</span>  &#123;</span><br><span class="line"></span><br><span class="line">    System.out.println(student);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> studentService.saveStudent(student);</span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="keyword">return</span> Msg.success();</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">return</span> Msg.fail();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="2-编写web配置文件允许跨域请求"><a class="markdownIt-Anchor" href="#2-编写web配置文件允许跨域请求">#</a> 2、编写 web 配置文件，允许跨域请求</h2>
<ul>
<li>在 config 包中创建 webconfig 类，继承 WebMvcConfigurer 文件</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyWebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">        registry</span><br><span class="line">                .addResourceHandler(<span class="string">&quot;/static/**&quot;</span>)</span><br><span class="line">                .addResourceLocations(<span class="string">&quot;classpath:/static/&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加全局的配置 允许跨域请求</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> &#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;*&quot;</span>)</span><br><span class="line">                .allowedMethods(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;GET&quot;</span>, <span class="string">&quot;PUT&quot;</span>, <span class="string">&quot;OPTIONS&quot;</span>, <span class="string">&quot;DELETE&quot;</span>)</span><br><span class="line">                .maxAge(<span class="number">3600</span>)</span><br><span class="line">                .allowCredentials(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-写对应的控制器"><a class="markdownIt-Anchor" href="#3-写对应的控制器">#</a> 3、写对应的控制器</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StudentService studentService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StudentClassService studentClassService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询全部学生</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">findAll</span><span class="params">(<span class="meta">@RequestParam(value = &quot;pageNum&quot;,defaultValue = &quot;1&quot;)</span>Integer pageNum)</span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum,<span class="number">10</span>);</span><br><span class="line">        List&lt;Student&gt; studentList = studentService.findAllStudent();</span><br><span class="line">        <span class="type">PageInfo</span> <span class="variable">page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>(studentList,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">&quot;ext&quot;</span>,page);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按主键查询</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findById/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span>Integer id)</span>&#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentService.findStudentById(id);</span><br><span class="line">        List&lt;StudentClass&gt; studentClasses = studentClassService.findAll();</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">&quot;student&quot;</span>,student).add(<span class="string">&quot;studentclass&quot;</span>,studentClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/addStudent&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">find</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;StudentClass&gt; studentClasses = studentClassService.findAll();</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">&quot;studentclass&quot;</span>,studentClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//按姓名（模糊）查询</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/findByName&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">findByName</span><span class="params">(<span class="meta">@RequestParam(&quot;name&quot;)</span> String name,<span class="meta">@RequestParam(value = &quot;pageNum&quot;,defaultValue = &quot;1&quot;)</span>Integer pageNum)</span>&#123;</span><br><span class="line">        PageHelper.startPage(pageNum,<span class="number">10</span>);</span><br><span class="line">        <span class="comment">//List&lt;Student&gt; studentList = studentService.findAllStudent();</span></span><br><span class="line">        List&lt;Student&gt; students = studentService.findStudentByName(name);</span><br><span class="line">        <span class="type">PageInfo</span> <span class="variable">page</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>(students,<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> Msg.success().add(<span class="string">&quot;ext&quot;</span>,page);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//return Msg.success().add(&quot;ext&quot;,students);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加（修改）信息</span></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/saveStudent&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">addStudent</span><span class="params">( <span class="meta">@RequestBody</span> Student student)</span>  &#123;</span><br><span class="line">        System.out.println(student);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> studentService.saveStudent(student);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.success();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">return</span> Msg.fail();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//修改信息</span></span><br><span class="line"><span class="comment">//    @PutMapping(&quot;/saveStudent&quot;)</span></span><br><span class="line"><span class="comment">//    public Msg updataById(Student student)&#123;</span></span><br><span class="line"><span class="comment">//        out.println(student);</span></span><br><span class="line"><span class="comment">//        boolean flag = studentService.saveStudent(student);</span></span><br><span class="line"><span class="comment">//        if (flag)&#123;</span></span><br><span class="line"><span class="comment">//            return Msg.success();</span></span><br><span class="line"><span class="comment">//        &#125;else return Msg.fail();</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//删除信息</span></span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/delStudent/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">delById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> studentService.delById(id);</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.success();</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">return</span> Msg.fail();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="4-写对应的服务"><a class="markdownIt-Anchor" href="#4-写对应的服务">#</a> 4、写对应的服务</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    StudentMapper studentMapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">findAllStudent</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Student&gt; list = studentMapper.selectByExample(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Student <span class="title function_">findStudentById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> studentMapper.selectByPrimaryKey(id);</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">findStudentByName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="type">StudentExample</span> <span class="variable">example</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StudentExample</span>();</span><br><span class="line">        StudentExample.<span class="type">Criteria</span> <span class="variable">criteria</span> <span class="operator">=</span> example.createCriteria();</span><br><span class="line">        criteria.andNameLike(<span class="string">&quot;%&quot;</span>+name+<span class="string">&quot;%&quot;</span>);</span><br><span class="line">        List&lt;Student&gt; students = studentMapper.selectByExample(example);</span><br><span class="line">        <span class="keyword">return</span> students;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">saveStudent</span><span class="params">(Student student)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(student.getId()==<span class="literal">null</span>) &#123;</span><br><span class="line">            out.println(student);</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> studentMapper.insertSelective(student);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> studentMapper.updateByPrimaryKeySelective(student);</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">delById</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> studentMapper.deleteByPrimaryKey(id);</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="5-写文件上传的控制器"><a class="markdownIt-Anchor" href="#5-写文件上传的控制器">#</a> 5、写文件上传的控制器</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UpLoadController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(value=&quot;/fileUpload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">fileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file,</span></span><br><span class="line"><span class="params">                          <span class="meta">@RequestParam(&quot;width&quot;)</span>Integer width,</span></span><br><span class="line"><span class="params">                          <span class="meta">@RequestParam(&quot;hight&quot;)</span>Integer hight,</span></span><br><span class="line"><span class="params">                          HttpServletRequest request)</span>&#123;</span><br><span class="line">        <span class="comment">//获取当前时间，用于创建子文件夹：newDir</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sPath</span> <span class="operator">=</span> <span class="string">&quot;/upload/&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newDir</span> <span class="operator">=</span> df.format(<span class="keyword">new</span> <span class="title class_">Date</span>())+<span class="string">&quot;/&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">serverPath</span> <span class="operator">=</span> request.getSession().getServletContext().getRealPath(sPath)+newDir;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">resPath</span> <span class="operator">=</span> request.getContextPath()+sPath+newDir;</span><br><span class="line">        out.println(<span class="string">&quot;serverPath========&quot;</span>+serverPath);</span><br><span class="line">        out.println(<span class="string">&quot;resPath========&quot;</span>+resPath);</span><br><span class="line">        <span class="keyword">if</span>(file.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> Msg.fail();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> file.getOriginalFilename();</span><br><span class="line">        <span class="type">String</span> <span class="variable">suffix</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> String.valueOf(System.currentTimeMillis())+<span class="string">&quot;.&quot;</span>+suffix;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> (<span class="type">int</span>) file.getSize();</span><br><span class="line">        out.println(name + <span class="string">&quot;--&gt;&quot;</span> + size);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//String path = serverPath ;</span></span><br><span class="line">        <span class="type">File</span> <span class="variable">dest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(serverPath,name);</span><br><span class="line">        <span class="keyword">if</span>(!dest.getParentFile().exists())&#123; <span class="comment">//判断文件父目录是否存在</span></span><br><span class="line">            dest.getParentFile().mkdirs();</span><br><span class="line">            out.println(dest.getParentFile().getAbsolutePath());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//file.transferTo(dest); //保存文件</span></span><br><span class="line">            <span class="comment">//压缩图片后保存</span></span><br><span class="line">            Thumbnails.of(file.getInputStream())</span><br><span class="line">                    .size(width,hight)</span><br><span class="line"><span class="comment">//                    .keepAspectRatio(false)</span></span><br><span class="line">                    .toFile(dest.getPath());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">img</span> <span class="operator">=</span> resPath + name;</span><br><span class="line">            <span class="keyword">return</span> Msg.success().add(<span class="string">&quot;img&quot;</span>,img);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalStateException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Msg.fail();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> Msg.fail();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="6-实现将excel导入到数据库功能"><a class="markdownIt-Anchor" href="#6-实现将excel导入到数据库功能">#</a> 6、实现将 Excel 导入到数据库功能</h2>
<h3 id="1maven配置"><a class="markdownIt-Anchor" href="#1maven配置">#</a> （1）maven 配置</h3>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--处理Excel--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2批量导入的实现"><a class="markdownIt-Anchor" href="#2批量导入的实现">#</a> （2）批量导入的实现</h3>
<ul>
<li>
<p>dao 层配置</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="title function_">batchInsert</span><span class="params">(List&lt;Student&gt; list)</span>;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>mapper 配置</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;batchInsert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.util.List&quot;</span>&gt;</span></span><br><span class="line">    insert into student_spring (id, name, num,img, classname, status, time, content)</span><br><span class="line">    values</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span> =<span class="string">&quot;list&quot;</span> <span class="attr">item</span> =<span class="string">&quot;Student&quot;</span> <span class="attr">index</span> =<span class="string">&quot;index&quot;</span> <span class="attr">separator</span> =<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">     (#&#123;Student.id,jdbcType=INTEGER&#125;, #&#123;Student.name,jdbcType=VARCHAR&#125;, #&#123;Student.num,jdbcType=VARCHAR&#125;,</span><br><span class="line">      #&#123;Student.img,jdbcType=VARCHAR&#125;, #&#123;Student.classname,jdbcType=VARCHAR&#125;, #&#123;Student.status,jdbcType=INTEGER&#125;,</span><br><span class="line">      #&#123;Student.time,jdbcType=DATE&#125;, #&#123;Student.content,jdbcType=LONGVARCHAR&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3service层实现"><a class="markdownIt-Anchor" href="#3service层实现">#</a> （3）service 层实现</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Student&gt; <span class="title function_">getListByExcel</span><span class="params">(InputStream in, String fileName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">       List&lt;Student&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Student&gt;();</span><br><span class="line">       <span class="comment">//创建Excel工作薄</span></span><br><span class="line">       <span class="type">Workbook</span> <span class="variable">work</span> <span class="operator">=</span> <span class="built_in">this</span>.getWorkbook(in, fileName);</span><br><span class="line">       <span class="keyword">if</span> (<span class="literal">null</span> == work) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;创建Excel工作薄为空！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; work.getNumberOfSheets(); i++) &#123;</span><br><span class="line">           sheet = work.getSheetAt(i);</span><br><span class="line">           <span class="keyword">if</span> (sheet == <span class="literal">null</span>) &#123;</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= sheet.getLastRowNum(); j++) &#123;</span><br><span class="line">               row = sheet.getRow(j);</span><br><span class="line">               <span class="keyword">if</span> (row == <span class="literal">null</span> || row.getFirstCellNum() == j) &#123;</span><br><span class="line">                   <span class="keyword">continue</span>;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="type">Student</span> <span class="variable">student</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span>(row.getCell(<span class="number">1</span>)!=<span class="literal">null</span>)&#123;</span><br><span class="line">                   student.setName(row.getCell(<span class="number">1</span>).getStringCellValue());</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">if</span>(row.getCell(<span class="number">2</span>)!=<span class="literal">null</span>)&#123;</span><br><span class="line">                   student.setNum(row.getCell(<span class="number">2</span>).getStringCellValue());</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               list.add(student);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       work.close();</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 判断文件格式</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> inStr</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> fileName</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> Workbook <span class="title function_">getWorkbook</span><span class="params">(InputStream inStr, String fileName)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">       <span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="type">String</span> <span class="variable">fileType</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">       <span class="keyword">if</span> (<span class="string">&quot;.xls&quot;</span>.equals(fileType)) &#123;</span><br><span class="line">           workbook = <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>(inStr);</span><br><span class="line">       &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;.xlsx&quot;</span>.equals(fileType)) &#123;</span><br><span class="line">           workbook = <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(inStr);</span><br><span class="line">       &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;请上传excel文件！&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> workbook;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h3 id="4controller层实现"><a class="markdownIt-Anchor" href="#4controller层实现">#</a> （4）controller 层实现</h3>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value=&quot;/xlxUpload&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Msg <span class="title function_">fileUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file,</span></span><br><span class="line"><span class="params">                          HttpServletRequest request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;Student&gt; list = studentService.getListByExcel(is,file.getOriginalFilename());</span><br><span class="line">            <span class="keyword">if</span>(studentMapper.batchInsert(list))&#123;</span><br><span class="line">                <span class="keyword">return</span> Msg.success();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  Msg.fail();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>后端</category>
        <category>Springboot</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>JAVA</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
</search>
